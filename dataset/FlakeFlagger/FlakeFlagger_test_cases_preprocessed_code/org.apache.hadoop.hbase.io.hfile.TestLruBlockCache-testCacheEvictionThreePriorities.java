public void testCacheEvictionThreePriorities() throws Exception {
expectedCacheSize+=singleBlocks[i].heapSize();//IT
expectedCacheSize+=multiBlocks[i].heapSize();//IT
expectedCacheSize+=memoryBlocks[i].heapSize();//IT
assertEquals(0,cache.getEvictionCount());
assertEquals(expectedCacheSize,cache.heapSize());
assertEquals(1,cache.getEvictionCount());
assertEquals(1,cache.getEvictedCount());
assertEquals(null,cache.getBlock(singleBlocks[0].blockName));
assertEquals(2,cache.getEvictionCount());
assertEquals(2,cache.getEvictedCount());
assertEquals(null,cache.getBlock(multiBlocks[0].blockName));
assertEquals(3,cache.getEvictionCount());
assertEquals(3,cache.getEvictedCount());
assertEquals(null,cache.getBlock(memoryBlocks[0].blockName));
assertEquals(4,cache.getEvictionCount());
assertEquals(6,cache.getEvictedCount());
assertEquals(null,cache.getBlock(singleBlocks[2].blockName));
assertEquals(null,cache.getBlock(singleBlocks[3].blockName));
assertEquals(null,cache.getBlock(singleBlocks[4].blockName));
assertEquals(5,cache.getEvictionCount());
assertEquals(9,cache.getEvictedCount());
assertEquals(null,cache.getBlock(singleBlocks[1].blockName));
assertEquals(null,cache.getBlock(multiBlocks[1].blockName));
assertEquals(null,cache.getBlock(multiBlocks[2].blockName));
assertEquals(6,cache.getEvictionCount());
assertEquals(12,cache.getEvictedCount());
assertEquals(null,cache.getBlock(memoryBlocks[1].blockName));
assertEquals(null,cache.getBlock(memoryBlocks[2].blockName));
assertEquals(null,cache.getBlock(memoryBlocks[3].blockName));
}