@Deployment public void testHistoricTaskInstance() throws Exception {
assertEquals(1,historyService.createHistoricTaskInstanceQuery().count());
assertEquals(taskId,historicTaskInstance.getId());
assertEquals(1234,historicTaskInstance.getPriority());
assertEquals("Clean up",historicTaskInstance.getName());
assertEquals("Schedule an engineering meeting for next week with the new hire.",historicTaskInstance.getDescription());
assertEquals(dueDate,historicTaskInstance.getDueDate());
assertEquals("kermit",historicTaskInstance.getAssignee());
assertEquals(taskDefinitionKey,historicTaskInstance.getTaskDefinitionKey());
assertEquals("expressionFormKey",historicTaskInstance.getFormKey());
assertNull(historicTaskInstance.getEndTime());
assertNull(historicTaskInstance.getDurationInMillis());
assertNull(historicTaskInstance.getWorkTimeInMillis());
assertEquals(1,historyService.createHistoricTaskInstanceQuery().count());
assertNotNull(historicTaskInstance.getClaimTime());
assertNull(historicTaskInstance.getWorkTimeInMillis());
assertEquals("expressionFormKey",historicTaskInstance.getFormKey());
assertEquals(1,historyService.createHistoricTaskInstanceQuery().count());
assertEquals(taskId,historicTaskInstance.getId());
assertEquals(1234,historicTaskInstance.getPriority());
assertEquals("Clean up",historicTaskInstance.getName());
assertEquals("Schedule an engineering meeting for next week with the new hire.",historicTaskInstance.getDescription());
assertEquals(dueDate,historicTaskInstance.getDueDate());
assertEquals("kermit",historicTaskInstance.getAssignee());
assertNull(historicTaskInstance.getDeleteReason());
assertEquals(taskDefinitionKey,historicTaskInstance.getTaskDefinitionKey());
assertEquals("expressionFormKey",historicTaskInstance.getFormKey());
assertNotNull(historicTaskInstance.getEndTime());
assertNotNull(historicTaskInstance.getDurationInMillis());
assertNotNull(historicTaskInstance.getClaimTime());
assertNotNull(historicTaskInstance.getWorkTimeInMillis());
assertEquals(0,historyService.createHistoricTaskInstanceQuery().count());
}