@Test public void testConfigUpdates() throws AmbariException {
Assert.assertNotNull(clusters.getCluster(clusterName).getService(serviceName).getServiceComponent(componentName1).getServiceComponentHost(host1));
Assert.assertNotNull(clusters.getCluster(clusterName).getService(serviceName).getServiceComponent(componentName2).getServiceComponentHost(host1));
Assert.assertNotNull(clusters.getCluster(clusterName).getService(serviceName).getServiceComponent(componentName2).getServiceComponentHost(host2));
Assert.assertNotNull(clusters.getCluster(clusterName).getService(serviceName).getServiceComponent(componentName3).getServiceComponentHost(host1));
Assert.assertNotNull(clusters.getCluster(clusterName).getService(serviceName).getServiceComponent(componentName3).getServiceComponentHost(host2));
Assert.assertNull(controller.updateHostComponents(schReqs));
Assert.assertEquals(0,s.getDesiredConfigs().size());
Assert.assertEquals(0,sc1.getDesiredConfigs().size());
Assert.assertEquals(3,sch1.getDesiredConfigs().size());
Assert.assertNull(controller.updateComponents(scReqs));
Assert.assertEquals(0,s.getDesiredConfigs().size());
Assert.assertEquals(0,sc1.getDesiredConfigs().size());
Assert.assertEquals(2,sc2.getDesiredConfigs().size());
Assert.assertEquals(3,sch1.getDesiredConfigs().size());
Assert.assertNull(controller.updateServices(sReqs));
Assert.assertEquals(3,s.getDesiredConfigs().size());
Assert.assertEquals(3,sc1.getDesiredConfigs().size());
Assert.assertEquals(4,sc2.getDesiredConfigs().size());
Assert.assertEquals(4,sch1.getDesiredConfigs().size());
Assert.assertEquals("v2",s.getDesiredConfigs().get("typeA").getVersionTag());
Assert.assertEquals("v2",s.getDesiredConfigs().get("typeC").getVersionTag());
Assert.assertEquals("v1",s.getDesiredConfigs().get("typeE").getVersionTag());
Assert.assertEquals("v2",sc1.getDesiredConfigs().get("typeA").getVersionTag());
Assert.assertEquals("v2",sc1.getDesiredConfigs().get("typeC").getVersionTag());
Assert.assertEquals("v1",sc1.getDesiredConfigs().get("typeE").getVersionTag());
Assert.assertEquals("v2",sc2.getDesiredConfigs().get("typeA").getVersionTag());
Assert.assertEquals("v2",sc2.getDesiredConfigs().get("typeC").getVersionTag());
Assert.assertEquals("v1",sc2.getDesiredConfigs().get("typeE").getVersionTag());
Assert.assertEquals("v1",sc2.getDesiredConfigs().get("typeD").getVersionTag());
Assert.assertEquals("v2",sch1.getDesiredConfigs().get("typeA").getVersionTag());
Assert.assertEquals("v2",sch1.getDesiredConfigs().get("typeC").getVersionTag());
Assert.assertEquals("v1",sch1.getDesiredConfigs().get("typeE").getVersionTag());
Assert.assertEquals("v1",sch1.getDesiredConfigs().get("typeB").getVersionTag());
Assert.assertNull(controller.updateHostComponents(schReqs));
Assert.assertEquals(3,s.getDesiredConfigs().size());
Assert.assertEquals(3,sc1.getDesiredConfigs().size());
Assert.assertEquals(4,sc2.getDesiredConfigs().size());
Assert.assertEquals(4,sch1.getDesiredConfigs().size());
Assert.assertEquals("v1",sch1.getDesiredConfigs().get("typeA").getVersionTag());
Assert.assertEquals("v1",sch1.getDesiredConfigs().get("typeC").getVersionTag());
Assert.assertEquals("v1",sch1.getDesiredConfigs().get("typeE").getVersionTag());
Assert.assertEquals("v1",sch1.getDesiredConfigs().get("typeB").getVersionTag());
Assert.assertNull(controller.updateComponents(scReqs));
Assert.assertEquals(3,s.getDesiredConfigs().size());
Assert.assertEquals(4,sc1.getDesiredConfigs().size());
Assert.assertEquals(4,sc2.getDesiredConfigs().size());
Assert.assertEquals(5,sch1.getDesiredConfigs().size());
Assert.assertEquals("v2",sc1.getDesiredConfigs().get("typeA").getVersionTag());
Assert.assertEquals("v2",sc1.getDesiredConfigs().get("typeC").getVersionTag());
Assert.assertEquals("v1",sc2.getDesiredConfigs().get("typeD").getVersionTag());
Assert.assertEquals("v1",sc1.getDesiredConfigs().get("typeE").getVersionTag());
Assert.assertEquals("v1",sch1.getDesiredConfigs().get("typeA").getVersionTag());
Assert.assertEquals("v2",sch1.getDesiredConfigs().get("typeC").getVersionTag());
Assert.assertEquals("v1",sch1.getDesiredConfigs().get("typeD").getVersionTag());
Assert.assertEquals("v1",sch1.getDesiredConfigs().get("typeE").getVersionTag());
Assert.assertEquals("v1",sch1.getDesiredConfigs().get("typeB").getVersionTag());
}