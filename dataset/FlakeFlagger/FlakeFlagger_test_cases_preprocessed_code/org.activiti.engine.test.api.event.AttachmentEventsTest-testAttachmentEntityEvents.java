@Deployment(resources={"org/activiti/engine/test/api/runtime/oneTaskProcess.bpmn20.xml"}) public void testAttachmentEntityEvents() throws Exception {
if (processEngineConfiguration.getHistoryLevel().isAtLeast(HistoryLevel.ACTIVITY)) {
assertNotNull(task);
assertNull(attachment.getUserId());
assertEquals(2,listener.getEventsReceived().size());
assertEquals(ActivitiEventType.ENTITY_CREATED,event.getType());
assertEquals(processInstance.getId(),event.getProcessInstanceId());
assertEquals(processInstance.getId(),event.getExecutionId());
assertEquals(processInstance.getProcessDefinitionId(),event.getProcessDefinitionId());
assertEquals(attachment.getId(),attachmentFromEvent.getId());
assertEquals(ActivitiEventType.ENTITY_INITIALIZED,event.getType());
assertEquals(processInstance.getId(),event.getProcessInstanceId());
assertEquals(processInstance.getId(),event.getExecutionId());
assertEquals(processInstance.getProcessDefinitionId(),event.getProcessDefinitionId());
assertEquals(attachment.getId(),attachmentFromEvent.getId());
assertNotNull(attachment.getUserId());
assertEquals("testuser",attachment.getUserId());
assertEquals(2,listener.getEventsReceived().size());
assertEquals(ActivitiEventType.ENTITY_CREATED,event.getType());
assertEquals(processInstance.getId(),event.getProcessInstanceId());
assertEquals(processInstance.getId(),event.getExecutionId());
assertEquals(processInstance.getProcessDefinitionId(),event.getProcessDefinitionId());
assertEquals(attachment.getId(),attachmentFromEvent.getId());
assertEquals(ActivitiEventType.ENTITY_INITIALIZED,event.getType());
assertEquals(1,listener.getEventsReceived().size());
assertEquals(ActivitiEventType.ENTITY_UPDATED,event.getType());
assertEquals(processInstance.getId(),event.getProcessInstanceId());
assertEquals(processInstance.getId(),event.getExecutionId());
assertEquals(processInstance.getProcessDefinitionId(),event.getProcessDefinitionId());
assertEquals(attachment.getId(),attachmentFromEvent.getId());
assertEquals("Description",attachmentFromEvent.getDescription());
assertEquals(1,listener.getEventsReceived().size());
assertEquals(ActivitiEventType.ENTITY_DELETED,event.getType());
assertEquals(processInstance.getId(),event.getProcessInstanceId());
assertEquals(processInstance.getId(),event.getExecutionId());
assertEquals(processInstance.getProcessDefinitionId(),event.getProcessDefinitionId());
assertEquals(attachment.getId(),attachmentFromEvent.getId());
}
}