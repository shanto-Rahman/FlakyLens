@Deployment public void testHistoricVariableUpdatesAllTypes() throws Exception {
assertEquals(9,details.size());
assertEquals("aVariable",startVarUpdate.getVariableName());
assertEquals("initial value",startVarUpdate.getValue());
assertEquals(0,startVarUpdate.getRevision());
assertEquals(processInstance.getId(),startVarUpdate.getProcessInstanceId());
assertEquals(startedDate,startVarUpdate.getTime());
assertEquals("aVariable",updatedStringVariable.getVariableName());
assertEquals("updated value",updatedStringVariable.getValue());
assertEquals(processInstance.getId(),updatedStringVariable.getProcessInstanceId());
assertEquals(updatedDate,updatedStringVariable.getTime());
assertEquals("bVariable",intVariable.getVariableName());
assertEquals(123,intVariable.getValue());
assertEquals(processInstance.getId(),intVariable.getProcessInstanceId());
assertEquals(updatedDate,intVariable.getTime());
assertEquals("cVariable",longVariable.getVariableName());
assertEquals(12345L,longVariable.getValue());
assertEquals(processInstance.getId(),longVariable.getProcessInstanceId());
assertEquals(updatedDate,longVariable.getTime());
assertEquals("dVariable",doubleVariable.getVariableName());
assertEquals(1234.567,doubleVariable.getValue());
assertEquals(processInstance.getId(),doubleVariable.getProcessInstanceId());
assertEquals(updatedDate,doubleVariable.getTime());
assertEquals("eVariable",shortVariable.getVariableName());
assertEquals((short)12,shortVariable.getValue());
assertEquals(processInstance.getId(),shortVariable.getProcessInstanceId());
assertEquals(updatedDate,shortVariable.getTime());
assertEquals("fVariable",dateVariable.getVariableName());
assertEquals(sdf.parse("01/01/2001 01:23:45 678"),dateVariable.getValue());
assertEquals(processInstance.getId(),dateVariable.getProcessInstanceId());
assertEquals(updatedDate,dateVariable.getTime());
assertEquals("gVariable",serializableVariable.getVariableName());
assertEquals(new SerializableVariable("hello hello"),serializableVariable.getValue());
assertEquals(processInstance.getId(),serializableVariable.getProcessInstanceId());
assertEquals(updatedDate,serializableVariable.getTime());
assertEquals("hVariable",byteArrayVariable.getVariableName());
assertEquals(";-)",new String((byte[])byteArrayVariable.getValue()));
assertEquals(processInstance.getId(),byteArrayVariable.getProcessInstanceId());
assertEquals(updatedDate,byteArrayVariable.getTime());
assertEquals(1,tasks.size());
assertEquals(8,historicProcessVariableQuery.count());
assertEquals("aVariable",historicVariable.getVariableName());
assertEquals("updated value",historicVariable.getValue());
assertEquals(processInstance.getId(),historicVariable.getProcessInstanceId());
assertEquals("bVariable",historicVariable.getVariableName());
assertEquals(123,historicVariable.getValue());
assertEquals(processInstance.getId(),historicVariable.getProcessInstanceId());
assertEquals("cVariable",historicVariable.getVariableName());
assertEquals(12345L,historicVariable.getValue());
assertEquals(processInstance.getId(),historicVariable.getProcessInstanceId());
assertEquals("dVariable",historicVariable.getVariableName());
assertEquals(1234.567,historicVariable.getValue());
assertEquals(processInstance.getId(),historicVariable.getProcessInstanceId());
assertEquals("eVariable",historicVariable.getVariableName());
assertEquals((short)12,historicVariable.getValue());
assertEquals(processInstance.getId(),historicVariable.getProcessInstanceId());
assertEquals("fVariable",historicVariable.getVariableName());
assertEquals(sdf.parse("01/01/2001 01:23:45 678"),historicVariable.getValue());
assertEquals(processInstance.getId(),historicVariable.getProcessInstanceId());
assertEquals("gVariable",historicVariable.getVariableName());
assertEquals(new SerializableVariable("hello hello"),historicVariable.getValue());
assertEquals(processInstance.getId(),historicVariable.getProcessInstanceId());
assertEquals("hVariable",historicVariable.getVariableName());
assertEquals(";-)",";-)",new String((byte[])historicVariable.getValue()));
assertEquals(processInstance.getId(),historicVariable.getProcessInstanceId());
}