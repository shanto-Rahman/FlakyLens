@Deployment(resources={"org/activiti/engine/test/api/runtime/oneTaskProcess.bpmn20.xml"}) public void testProcessInstanceEvents() throws Exception {
assertNotNull(processInstance);
assertEquals(5,listener.getEventsReceived().size());
assertTrue(listener.getEventsReceived().get(0) instanceof ActivitiEntityEvent);
assertEquals(ActivitiEventType.ENTITY_CREATED,event.getType());
assertEquals(processInstance.getId(),((ProcessInstance)event.getEntity()).getId());
assertEquals(processInstance.getId(),event.getProcessInstanceId());
assertEquals(processInstance.getId(),event.getExecutionId());
assertEquals(processInstance.getProcessDefinitionId(),event.getProcessDefinitionId());
assertEquals(ActivitiEventType.ENTITY_INITIALIZED,event.getType());
assertEquals(processInstance.getId(),event.getProcessInstanceId());
assertEquals(processInstance.getId(),event.getExecutionId());
assertEquals(processInstance.getProcessDefinitionId(),event.getProcessDefinitionId());
assertEquals(ActivitiEventType.ENTITY_CREATED,event.getType());
assertEquals(processInstance.getId(),event.getProcessInstanceId());
assertEquals(processInstance.getProcessDefinitionId(),event.getProcessDefinitionId());
assertEquals(ActivitiEventType.ENTITY_INITIALIZED,event.getType());
assertEquals(processInstance.getId(),event.getProcessInstanceId());
assertEquals(processInstance.getProcessDefinitionId(),event.getProcessDefinitionId());
assertEquals(ActivitiEventType.PROCESS_STARTED,event.getType());
assertEquals(processInstance.getId(),event.getProcessInstanceId());
assertEquals(processInstance.getProcessDefinitionId(),event.getProcessDefinitionId());
assertTrue(event instanceof ActivitiProcessStartedEvent);
assertNull(((ActivitiProcessStartedEvent)event).getNestedProcessDefinitionId());
assertNull(((ActivitiProcessStartedEvent)event).getNestedProcessInstanceId());
listener.clearEventsReceived();//IT
assertEquals(4,listener.getEventsReceived().size());
assertEquals(processInstance.getId(),((ProcessInstance)event.getEntity()).getId());
assertEquals(ActivitiEventType.ENTITY_SUSPENDED,event.getType());
assertEquals(processInstance.getId(),event.getProcessInstanceId());
assertEquals(processInstance.getId(),event.getExecutionId());
assertEquals(processInstance.getProcessDefinitionId(),event.getProcessDefinitionId());
assertEquals(ActivitiEventType.ENTITY_SUSPENDED,event.getType());
assertEquals(processInstance.getId(),event.getProcessInstanceId());
assertEquals(processInstance.getProcessDefinitionId(),event.getProcessDefinitionId());
assertEquals(ActivitiEventType.ENTITY_ACTIVATED,event.getType());
assertEquals(processInstance.getId(),((ProcessInstance)event.getEntity()).getId());
assertEquals(processInstance.getId(),event.getProcessInstanceId());
assertEquals(processInstance.getId(),event.getExecutionId());
assertEquals(processInstance.getProcessDefinitionId(),event.getProcessDefinitionId());
assertEquals(ActivitiEventType.ENTITY_ACTIVATED,event.getType());
assertEquals(processInstance.getId(),event.getProcessInstanceId());
assertEquals(processInstance.getProcessDefinitionId(),event.getProcessDefinitionId());
listener.clearEventsReceived();//IT
assertEquals(4,listener.getEventsReceived().size());
assertEquals(processInstance.getId(),((ProcessInstance)event.getEntity()).getId());
assertEquals(ActivitiEventType.ENTITY_SUSPENDED,event.getType());
assertEquals(processInstance.getId(),event.getProcessInstanceId());
assertEquals(processInstance.getId(),event.getExecutionId());
assertEquals(processInstance.getProcessDefinitionId(),event.getProcessDefinitionId());
assertEquals(ActivitiEventType.ENTITY_SUSPENDED,event.getType());
assertEquals(processInstance.getId(),event.getProcessInstanceId());
assertEquals(processInstance.getProcessDefinitionId(),event.getProcessDefinitionId());
assertEquals(ActivitiEventType.ENTITY_ACTIVATED,event.getType());
assertEquals(processInstance.getId(),((ProcessInstance)event.getEntity()).getId());
assertEquals(processInstance.getId(),event.getProcessInstanceId());
assertEquals(processInstance.getId(),event.getExecutionId());
assertEquals(processInstance.getProcessDefinitionId(),event.getProcessDefinitionId());
assertEquals(ActivitiEventType.ENTITY_ACTIVATED,event.getType());
assertEquals(processInstance.getId(),event.getProcessInstanceId());
assertEquals(processInstance.getProcessDefinitionId(),event.getProcessDefinitionId());
listener.clearEventsReceived();//IT
assertEquals(1,listener.getEventsReceived().size());
assertEquals(processInstance.getId(),((ProcessInstance)event.getEntity()).getId());
assertEquals(ActivitiEventType.ENTITY_UPDATED,event.getType());
assertEquals(processInstance.getId(),event.getProcessInstanceId());
assertEquals(processInstance.getId(),event.getExecutionId());
assertEquals(processInstance.getProcessDefinitionId(),event.getProcessDefinitionId());
listener.clearEventsReceived();//IT
assertEquals(1,processCancelledEvents.size());
assertEquals(ActivitiEventType.PROCESS_CANCELLED,cancelledEvent.getType());
assertEquals(processInstance.getId(),cancelledEvent.getProcessInstanceId());
assertEquals(processInstance.getId(),cancelledEvent.getExecutionId());
listener.clearEventsReceived();//IT
}