public void testQuery(){
if (processEngineConfiguration.getHistoryLevel().isAtLeast(HistoryLevel.ACTIVITY)) {
assertEquals(1,variableMap.size());
assertEquals(123,variableMap.get("anothertest"));
assertEquals(6,instanceList.size());
instanceList=historyService.createHistoricProcessInstanceQuery().includeProcessVariables().processDefinitionKey(PROCESS_DEFINITION_KEY).list();//RW
assertEquals(4,instanceList.size());
assertEquals(2,variableMap.size());
assertEquals("test",variableMap.get("test"));
assertEquals("test2",variableMap.get("test2"));
assertEquals(PROCESS_DEFINITION_KEY,instanceList.get(0).getProcessDefinitionKey());//RW
processInstance=historyService.createHistoricProcessInstanceQuery().includeProcessVariables().processDefinitionKey(PROCESS_DEFINITION_KEY_2).singleResult();//RW
assertEquals(1,variableMap.size());
assertEquals(123,variableMap.get("anothertest"));
assertEquals(2,variableMap.size());
assertEquals("test",variableMap.get("test"));
assertEquals("test2",variableMap.get("test2"));
assertEquals(6,instanceList.size());
assertEquals(6,historyService.createHistoricProcessInstanceQuery().includeProcessVariables().count());
assertEquals(4,instanceList.size());
assertEquals(4,historyService.createHistoricProcessInstanceQuery().variableValueEquals("test","test").includeProcessVariables().count());
assertEquals(4,instanceList.size());
assertEquals(4,historyService.createHistoricProcessInstanceQuery().variableValueLike("test","te%").includeProcessVariables().count());
assertEquals(4,instanceList.size());
assertEquals(4,historyService.createHistoricProcessInstanceQuery().variableValueLike("test2","te%2").includeProcessVariables().count());
assertEquals(4,instanceList.size());
assertEquals(4,historyService.createHistoricProcessInstanceQuery().variableValueLikeIgnoreCase("test","te%").includeProcessVariables().count());
assertEquals(0,instanceList.size());
assertEquals(0,historyService.createHistoricProcessInstanceQuery().variableValueLikeIgnoreCase("test","t3%").includeProcessVariables().count());
assertEquals(6,instanceList.size());
assertEquals(6,historyService.createHistoricProcessInstanceQuery().includeProcessVariables().count());
assertEquals(1,instanceList.size());
assertEquals(2,variableMap.size());
assertEquals("test",variableMap.get("test"));
assertEquals("test2",variableMap.get("test2"));
assertEquals(4,historyService.createHistoricProcessInstanceQuery().variableValueEquals("test","test").includeProcessVariables().count());
instanceList=historyService.createHistoricProcessInstanceQuery().includeProcessVariables().processDefinitionKey(PROCESS_DEFINITION_KEY).listPage(1,2);//RW
assertEquals(2,instanceList.size());
assertEquals(2,variableMap.size());
assertEquals("test",variableMap.get("test"));
assertEquals("test2",variableMap.get("test2"));
instanceList=historyService.createHistoricProcessInstanceQuery().includeProcessVariables().processDefinitionKey(PROCESS_DEFINITION_KEY).listPage(3,4);//RW
assertEquals(1,instanceList.size());
assertEquals(2,variableMap.size());
assertEquals("test",variableMap.get("test"));
assertEquals("test2",variableMap.get("test2"));
instanceList=historyService.createHistoricProcessInstanceQuery().includeProcessVariables().processDefinitionKey(PROCESS_DEFINITION_KEY).listPage(4,2);//RW
assertEquals(0,instanceList.size());
assertEquals(4,instanceList.size());
}
}