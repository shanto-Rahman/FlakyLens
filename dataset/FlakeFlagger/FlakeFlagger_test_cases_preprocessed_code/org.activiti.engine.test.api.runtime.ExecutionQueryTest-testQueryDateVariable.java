@Deployment(resources={"org/activiti/engine/test/api/oneTaskProcess.bpmn20.xml"}) public void testQueryDateVariable() throws Exception {
assertNotNull(executions);
assertEquals(2,executions.size());
assertNotNull(execution);
assertEquals(processInstance2.getId(),execution.getId());
assertNull(execution);
assertNotNull(execution);
assertEquals(processInstance3.getId(),execution.getId());
assertNotNull(execution);
assertEquals(processInstance3.getId(),execution.getId());
assertEquals(0,runtimeService.createExecutionQuery().variableValueGreaterThan("dateVar",nextYear.getTime()).count());
assertEquals(3,runtimeService.createExecutionQuery().variableValueGreaterThan("dateVar",oneYearAgo.getTime()).count());
assertNotNull(execution);
assertEquals(processInstance3.getId(),execution.getId());
assertNotNull(execution);
assertEquals(processInstance3.getId(),execution.getId());
assertEquals(3,runtimeService.createExecutionQuery().variableValueGreaterThanOrEqual("dateVar",oneYearAgo.getTime()).count());
assertEquals(2,executions.size());
assertTrue(ids.isEmpty());
assertEquals(0,runtimeService.createExecutionQuery().variableValueLessThan("dateVar",date1).count());
assertEquals(3,runtimeService.createExecutionQuery().variableValueLessThan("dateVar",twoYearsLater.getTime()).count());
assertEquals(3,executions.size());
assertEquals(0,runtimeService.createExecutionQuery().variableValueLessThanOrEqual("dateVar",oneYearAgo.getTime()).count());
assertNotNull(execution);
assertEquals(processInstance3.getId(),execution.getId());
assertEquals(2,executions.size());
assertTrue(ids.isEmpty());
assertNull(execution);
}