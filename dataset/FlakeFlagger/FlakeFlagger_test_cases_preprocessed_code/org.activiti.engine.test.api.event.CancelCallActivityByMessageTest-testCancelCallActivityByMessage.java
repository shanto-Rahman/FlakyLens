@Deployment(resources={"org/activiti/engine/test/api/event/CancelCallActivityByMessageTest.testActivityMessageBoundaryEventsOnCallActivity.bpmn20.xml","org/activiti/engine/test/api/event/CancelCallActivityByMessageTest.testActivityMessageBoundaryEventsExternalSubProcess.bpmn20.xml"}) public void testCancelCallActivityByMessage() throws Exception {
assertNotNull(processInstance);
assertNotNull(executionWithMessageEvent);
assertEquals(ActivitiEventType.ENTITY_CREATED,entityEvent.getType());
assertNull(executionEntity.getParentId());
assertEquals(ActivitiEventType.ENTITY_CREATED,entityEvent.getType());
assertNotNull(executionEntity.getParentId());
assertEquals(processExecutionId,executionEntity.getParentId());
assertEquals(ActivitiEventType.PROCESS_STARTED,activitiEvent.getType());
assertEquals(ActivitiEventType.ACTIVITY_STARTED,activityEvent.getType());
assertEquals("startEvent",activityEvent.getActivityType());
assertEquals(ActivitiEventType.ACTIVITY_COMPLETED,activityEvent.getType());
assertEquals("startEvent",activityEvent.getActivityType());
assertEquals(ActivitiEventType.ENTITY_CREATED,entityEvent.getType());
assertEquals("cancelBoundaryMessageEvent",executionEntity.getActivityId());
assertEquals(ActivitiEventType.ACTIVITY_STARTED,activityEvent.getType());
assertEquals("callActivity1",activityEvent.getActivityId());
assertEquals(ActivitiEventType.ENTITY_CREATED,entityEvent.getType());
assertNull(executionEntity.getParentId());
assertEquals(executionEntity.getId(),executionEntity.getProcessInstanceId());
assertEquals(ActivitiEventType.ENTITY_CREATED,entityEvent.getType());
assertEquals("calledSubprocessTask",executionEntity.getActivityId());
assertEquals(ActivitiEventType.PROCESS_STARTED,activitiEvent.getType());
assertEquals(ActivitiEventType.ACTIVITY_STARTED,activityEvent.getType());
assertEquals("startEvent",activityEvent.getActivityType());
assertEquals("startevent2",activityEvent.getActivityId());
assertEquals(ActivitiEventType.ACTIVITY_COMPLETED,activityEvent.getType());
assertEquals("startEvent",activityEvent.getActivityType());
assertEquals("startevent2",activityEvent.getActivityId());
assertEquals(ActivitiEventType.ACTIVITY_STARTED,activityEvent.getType());
assertEquals("calledSubprocessTask",activityEvent.getActivityId());
assertEquals("userTask",activityEvent.getActivityType());
assertEquals(ActivitiEventType.TASK_CREATED,entityEvent.getType());
assertEquals("Sample User Task2 in External",taskEntity.getName());
assertEquals(ActivitiEventType.ACTIVITY_CANCELLED,activityEvent.getType());
assertEquals("callActivity",activityEvent.getActivityType());
assertEquals(boundaryExecutionId,activityEvent.getExecutionId());
assertEquals(ActivitiEventType.ACTIVITY_CANCELLED,taskCancelledEvent.getType());
assertEquals(taskEntity.getName(),taskCancelledEvent.getActivityName());
assertEquals(ActivitiEventType.PROCESS_CANCELLED,processCancelledEvent.getType());
assertEquals(processCancelledEvent.getProcessInstanceId(),processCancelledEvent.getExecutionId());
assertEquals(ActivitiEventType.ACTIVITY_COMPLETED,activityEvent.getType());
assertEquals("boundaryEvent",activityEvent.getActivityType());
assertEquals("cancelBoundaryMessageEvent",activityEvent.getActivityId());
assertEquals(ActivitiEventType.ACTIVITY_STARTED,activityEvent.getType());
assertEquals("usertask1",activityEvent.getActivityId());
assertEquals("userTask",activityEvent.getActivityType());
assertEquals(ActivitiEventType.TASK_CREATED,entityEvent.getType());
assertEquals("Sample User Task1",taskEntity.getName());
assertEquals(20,myEventListener.getEventsReceived().size());
}