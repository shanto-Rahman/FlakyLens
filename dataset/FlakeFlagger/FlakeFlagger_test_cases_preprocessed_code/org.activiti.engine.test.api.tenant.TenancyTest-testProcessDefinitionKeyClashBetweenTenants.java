public void testProcessDefinitionKeyClashBetweenTenants(){
assertEquals("oneTaskProcess",repositoryService.createProcessDefinitionQuery().processDefinitionId(procDefIdA).singleResult().getKey());
assertEquals(1,repositoryService.createProcessDefinitionQuery().processDefinitionId(procDefIdA).singleResult().getVersion());
assertEquals("oneTaskProcess",repositoryService.createProcessDefinitionQuery().processDefinitionId(procDefIdB).singleResult().getKey());
assertEquals(1,repositoryService.createProcessDefinitionQuery().processDefinitionId(procDefIdB).singleResult().getVersion());
assertEquals(2,repositoryService.createProcessDefinitionQuery().processDefinitionKey("oneTaskProcess").list().size());
assertEquals(1,repositoryService.createProcessDefinitionQuery().processDefinitionKey("oneTaskProcess").processDefinitionTenantId(tentanA).list().size());
assertEquals(1,repositoryService.createProcessDefinitionQuery().processDefinitionKey("oneTaskProcess").processDefinitionTenantId(tenantB).list().size());
assertEquals(0,repositoryService.createProcessDefinitionQuery().processDefinitionKey("oneTaskProcess").processDefinitionWithoutTenantId().list().size());
assertEquals("oneTaskProcess",repositoryService.createProcessDefinitionQuery().processDefinitionId(procDefIdA).singleResult().getKey());
assertEquals(2,repositoryService.createProcessDefinitionQuery().processDefinitionId(procDefIdA).singleResult().getVersion());
assertEquals(2,repositoryService.createProcessDefinitionQuery().processDefinitionKey("oneTaskProcess").processDefinitionTenantId(tentanA).latestVersion().singleResult().getVersion());
assertEquals("oneTaskProcess",repositoryService.createProcessDefinitionQuery().processDefinitionId(procDefIdB).singleResult().getKey());
assertEquals(1,repositoryService.createProcessDefinitionQuery().processDefinitionId(procDefIdB).singleResult().getVersion());
assertEquals(3,repositoryService.createProcessDefinitionQuery().processDefinitionKey("oneTaskProcess").list().size());
assertEquals(2,repositoryService.createProcessDefinitionQuery().processDefinitionKey("oneTaskProcess").processDefinitionTenantId(tentanA).list().size());
assertEquals(1,repositoryService.createProcessDefinitionQuery().processDefinitionKey("oneTaskProcess").processDefinitionTenantId(tenantB).list().size());
assertEquals(1,repositoryService.createProcessDefinitionQuery().processDefinitionKey("oneTaskProcess").processDefinitionTenantId(tentanA).latestVersion().list().size());
assertEquals(0,repositoryService.createProcessDefinitionQuery().processDefinitionKey("oneTaskProcess").processDefinitionWithoutTenantId().list().size());
fail();
assertEquals(procDefIdA,processInstance.getProcessDefinitionId());
assertEquals(procDefIdB,processInstance.getProcessDefinitionId());
}