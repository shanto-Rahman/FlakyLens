@Test public void testContainerCacheEviction() throws Exception {
  File root=new File(testRoot);
  root.mkdirs();
  OzoneConfiguration conf=new OzoneConfiguration();
  conf.setInt(OzoneConfigKeys.OZONE_CONTAINER_CACHE_SIZE,2);
  ContainerCache cache=ContainerCache.getInstance(conf);
  cache.clear();
  Assert.assertEquals(0,cache.size());
  File containerDir1=new File(root,"cont1");
  File containerDir2=new File(root,"cont2");
  File containerDir3=new File(root,"cont3");
  File containerDir4=new File(root,"cont4");
  createContainerDB(conf,containerDir1);
  createContainerDB(conf,containerDir2);
  createContainerDB(conf,containerDir3);
  createContainerDB(conf,containerDir4);
  ContainerCacheMetrics metrics=cache.getMetrics();
  long numDbGetCount=metrics.getNumDbGetOps();
  long numCacheMisses=metrics.getNumCacheMisses();
  ReferenceCountedDB db1=cache.getDB(1,"RocksDB",containerDir1.getPath(),VersionedDatanodeFeatures.SchemaV2.chooseSchemaVersion(),conf);
  Assert.assertEquals(1,db1.getReferenceCount());
  Assert.assertEquals(numDbGetCount + 1,metrics.getNumDbGetOps());
  ReferenceCountedDB db2=cache.getDB(1,"RocksDB",containerDir1.getPath(),VersionedDatanodeFeatures.SchemaV2.chooseSchemaVersion(),conf);
  Assert.assertEquals(2,db2.getReferenceCount());
  Assert.assertEquals(numCacheMisses + 1,metrics.getNumCacheMisses());
  Assert.assertEquals(2,db1.getReferenceCount());
  Assert.assertEquals(db1,db2);
  Assert.assertEquals(numDbGetCount + 2,metrics.getNumDbGetOps());
  Assert.assertEquals(numCacheMisses + 1,metrics.getNumCacheMisses());
  ReferenceCountedDB db3=cache.getDB(2,"RocksDB",containerDir2.getPath(),VersionedDatanodeFeatures.SchemaV2.chooseSchemaVersion(),conf);
  Assert.assertEquals(1,db3.getReferenceCount());
  db3.close();
  Assert.assertEquals(0,db3.getReferenceCount());
  ReferenceCountedDB db4=cache.getDB(3,"RocksDB",containerDir3.getPath(),VersionedDatanodeFeatures.SchemaV2.chooseSchemaVersion(),conf);
  Assert.assertEquals(1,db4.getReferenceCount());
  Assert.assertEquals(2,cache.size());
  Assert.assertNotNull(cache.get(containerDir1.getPath()));
  Assert.assertNull(cache.get(containerDir2.getPath()));
  db1.close();
  db2.close();
  Assert.assertEquals(0,db1.getReferenceCount());
  Assert.assertEquals(0,db2.getReferenceCount());
  ReferenceCountedDB db5=cache.getDB(1,"RocksDB",containerDir1.getPath(),VersionedDatanodeFeatures.SchemaV2.chooseSchemaVersion(),conf);
  Assert.assertEquals(1,db5.getReferenceCount());
  Assert.assertEquals(db1,db5);
  db5.close();
  db4.close();
  thrown.expect(IllegalArgumentException.class);
  db5.close();
}
