@Test public void testMemoryPlacementReservationRequest() throws Throwable {
  GroupResourcePlacementState placementState=createAndStoreGroupResourcePlacement();
  String descLink=containerDescription.documentSelfLink;
  int count=8;
  boolean expectFailure=false;
  placementState=makeResourcePlacementReservationRequest(count,descLink,placementState,expectFailure);
  assertEquals(CONTAINER_MEMORY / 2,placementState.availableMemory);
  count=-5;
  placementState=makeResourcePlacementReservationRequest(count,descLink,placementState,expectFailure);
  assertEquals(7,placementState.availableInstancesCount);
  assertEquals(3,placementState.allocatedInstancesCount);
  count=(int)-(placementState.maxNumberInstances - placementState.availableInstancesCount + 1);
  placementState=makeResourcePlacementReservationRequest(count,descLink,placementState,expectFailure);
  count=7;
  expectFailure=true;
  placementState=makeResourcePlacementReservationRequest(count,descLink,placementState,expectFailure);
  GroupResourcePlacementState noLimitsGroupResourcePlacement=createAndStoreGroupResourcePlacement("test",0L,0L,0,0,resourcePool.documentSelfLink,false);
  expectFailure=false;
  noLimitsGroupResourcePlacement=makeResourcePlacementReservationRequest(1,descLink,noLimitsGroupResourcePlacement,expectFailure);
  assertEquals(0,noLimitsGroupResourcePlacement.availableMemory);
  assertEquals(0,noLimitsGroupResourcePlacement.memoryLimit);
  assertEquals(9,noLimitsGroupResourcePlacement.availableInstancesCount);
  assertEquals(1,noLimitsGroupResourcePlacement.allocatedInstancesCount);
  ContainerDescriptionService.ContainerDescription noLimitsContainerDescription=createAndStoreContainerDescription("no-limits",0L);
  noLimitsGroupResourcePlacement=makeResourcePlacementReservationRequest(1,noLimitsContainerDescription.documentSelfLink,noLimitsGroupResourcePlacement,expectFailure);
  assertEquals(0,noLimitsGroupResourcePlacement.availableMemory);
  assertEquals(0,noLimitsGroupResourcePlacement.memoryLimit);
  assertEquals(8,noLimitsGroupResourcePlacement.availableInstancesCount);
  assertEquals(2,noLimitsGroupResourcePlacement.allocatedInstancesCount);
  releasePlacement(placementState,descLink,count);
  releasePlacement(noLimitsGroupResourcePlacement,descLink,1);
  releasePlacement(noLimitsGroupResourcePlacement,noLimitsContainerDescription.documentSelfLink,1);
  doDelete(UriUtils.buildUri(host,descLink),false);
  doDelete(UriUtils.buildUri(host,noLimitsContainerDescription.documentSelfLink),false);
}
