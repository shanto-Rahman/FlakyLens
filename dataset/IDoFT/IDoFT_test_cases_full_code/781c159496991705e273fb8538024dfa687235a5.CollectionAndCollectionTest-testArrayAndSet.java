@Test public void testArrayAndSet(){
  Convertor intSet=helper.getConvertor(int[].class,Set.class);
  Convertor integerSet=helper.getConvertor(Integer[].class,Set.class);
  int[] intArray=new int[]{1,2};
  Integer[] integerArray=new Integer[]{1,2};
  Set intSetValue=(Set)intSet.convert(intArray,Set.class);
  Set integerSetValue=(Set)integerSet.convert(integerArray,Set.class);
  assertEquals(intSetValue.size(),intArray.length);
  assertEquals(intSetValue.iterator().next(),intArray[0]);
  assertEquals(integerSetValue.size(),integerArray.length);
  assertEquals(integerSetValue.iterator().next(),integerArray[0]);
  Set<BigInteger> intSetValueOther=(Set)intSet.convertCollection(intArray,Set.class,BigInteger.class);
  Set<BigDecimal> integerSetValueOther=(Set)integerSet.convertCollection(intArray,Set.class,BigDecimal.class);
  assertEquals(intSetValueOther.size(),intArray.length);
  assertEquals(intSetValueOther.iterator().next().intValue(),intArray[0]);
  assertEquals(integerSetValueOther.size(),integerArray.length);
  Convertor bigDecimalSet=helper.getConvertor(BigDecimal[].class,HashSet.class);
  Convertor bigIntegerSet=helper.getConvertor(BigInteger[].class,LinkedHashSet.class);
  BigDecimal[] bigDecimalArray=new BigDecimal[]{BigDecimal.ZERO,BigDecimal.ONE};
  BigInteger[] bigIntegerArray=new BigInteger[]{BigInteger.ZERO,BigInteger.ONE};
  Set bigDecimalSetValue=(Set)bigDecimalSet.convert(bigDecimalArray,HashSet.class);
  Set bigIntegerSetValue=(Set)bigIntegerSet.convert(bigIntegerArray,LinkedHashSet.class);
  assertEquals(bigDecimalSetValue.size(),bigDecimalArray.length);
  assertEquals(bigDecimalSetValue.iterator().next(),bigDecimalArray[0]);
  assertEquals(bigIntegerSetValue.size(),bigIntegerArray.length);
  assertEquals(bigIntegerSetValue.iterator().next(),bigIntegerArray[0]);
  Convertor modelSet=helper.getConvertor(ConvertorModel[].class,TreeSet.class);
  ConvertorModel[] modelArray=new ConvertorModel[]{new ConvertorModel()};
  Set modelSetValue=(Set)modelSet.convert(modelArray,TreeSet.class);
  assertEquals(modelSetValue.size(),modelArray.length);
  assertEquals(modelSetValue.iterator().next(),modelArray[0]);
  Set<ConvertorOtherModel> modelSetValueOther=(Set)modelSet.convertCollection(modelArray,TreeSet.class,ConvertorOtherModel.class);
  assertEquals(modelSetValueOther.size(),modelArray.length);
  assertEquals(modelSetValueOther.iterator().next().getI(),modelArray[0].getI());
}
