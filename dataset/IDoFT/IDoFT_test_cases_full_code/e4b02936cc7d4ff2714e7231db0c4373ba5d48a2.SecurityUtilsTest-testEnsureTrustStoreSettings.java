@Test public void testEnsureTrustStoreSettings() throws URISyntaxException {
  SecurityUtils.ensureTrustStoreSettings();
  String trustStore=System.getProperty(JAVAX_NET_SSL_TRUST_STORE);
  assertTrue(trustStore == null || "".equals(trustStore));
  String trustStorePassword=System.getProperty(JAVAX_NET_SSL_TRUST_STORE_PASSWORD);
  assertTrue(trustStorePassword == null || "".equals(trustStorePassword));
  String securityProperties=System.getProperty(SECURITY_PROPERTIES);
  assertNull(securityProperties);
  System.setProperty(JAVAX_NET_SSL_TRUST_STORE,"/foo/bar/trustStore");
  System.setProperty(JAVAX_NET_SSL_TRUST_STORE_PASSWORD,"secret");
  System.clearProperty(SECURITY_PROPERTIES);
  SecurityUtils.ensureTrustStoreSettings();
  trustStore=System.getProperty(JAVAX_NET_SSL_TRUST_STORE);
  assertNotNull(trustStore);
  assertEquals("/foo/bar/trustStore",trustStore);
  trustStorePassword=System.getProperty(JAVAX_NET_SSL_TRUST_STORE_PASSWORD);
  assertNotNull(trustStorePassword);
  assertEquals("secret",trustStorePassword);
  securityProperties=System.getProperty(SECURITY_PROPERTIES);
  assertNull(securityProperties);
  System.setProperty(JAVAX_NET_SSL_TRUST_STORE,"/foo/bar/trustStore");
  System.setProperty(JAVAX_NET_SSL_TRUST_STORE_PASSWORD,"secret");
  System.setProperty(SECURITY_PROPERTIES,"/foo/bar/ignored");
  SecurityUtils.ensureTrustStoreSettings();
  trustStore=System.getProperty(JAVAX_NET_SSL_TRUST_STORE);
  assertNotNull(trustStore);
  assertEquals("/foo/bar/trustStore",trustStore);
  trustStorePassword=System.getProperty(JAVAX_NET_SSL_TRUST_STORE_PASSWORD);
  assertNotNull(trustStorePassword);
  assertEquals("secret",trustStorePassword);
  securityProperties=System.getProperty(SECURITY_PROPERTIES);
  assertNotNull(securityProperties);
  assertEquals("/foo/bar/ignored",securityProperties);
  System.clearProperty(JAVAX_NET_SSL_TRUST_STORE);
  System.clearProperty(JAVAX_NET_SSL_TRUST_STORE_PASSWORD);
  String securityPropertiesValue=SecurityUtilsTest.class.getResource("/security1.properties").toURI().getPath();
  System.setProperty(SECURITY_PROPERTIES,securityPropertiesValue);
  SecurityUtils.ensureTrustStoreSettings();
  trustStore=System.getProperty(JAVAX_NET_SSL_TRUST_STORE);
  assertNotNull(trustStore);
  assertEquals("/foo/bar/trustStore1",trustStore);
  trustStorePassword=System.getProperty(JAVAX_NET_SSL_TRUST_STORE_PASSWORD);
  assertNotNull(trustStorePassword);
  assertEquals("secret1",trustStorePassword);
  securityProperties=System.getProperty(SECURITY_PROPERTIES);
  assertNotNull(securityProperties);
  assertEquals(securityPropertiesValue,securityProperties);
  System.clearProperty(JAVAX_NET_SSL_TRUST_STORE);
  System.clearProperty(JAVAX_NET_SSL_TRUST_STORE_PASSWORD);
  securityPropertiesValue=SecurityUtilsTest.class.getResource("/security2.properties").toURI().getPath();
  System.setProperty(SECURITY_PROPERTIES,securityPropertiesValue);
  String encryptionKey=SecurityUtilsTest.class.getResource("/encryption.key").toURI().getPath();
  System.setProperty(ENCRYPTION_KEY,encryptionKey);
  EncryptionUtils.initEncryptionService();
  SecurityUtils.ensureTrustStoreSettings();
  trustStore=System.getProperty(JAVAX_NET_SSL_TRUST_STORE);
  assertNotNull(trustStore);
  assertEquals("/foo/bar/trustStore2",trustStore);
  trustStorePassword=System.getProperty(JAVAX_NET_SSL_TRUST_STORE_PASSWORD);
  assertNotNull(trustStorePassword);
  assertEquals("secret2",trustStorePassword);
  securityProperties=System.getProperty(SECURITY_PROPERTIES);
  assertNotNull(securityProperties);
  assertEquals(securityPropertiesValue,securityProperties);
}
