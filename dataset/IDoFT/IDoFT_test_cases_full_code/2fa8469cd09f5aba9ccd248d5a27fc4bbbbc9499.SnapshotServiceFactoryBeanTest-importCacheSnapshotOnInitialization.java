@Test public void importCacheSnapshotOnInitialization() throws Exception {
  Cache mockCache=mock(Cache.class,"MockCache");
  CacheSnapshotService mockCacheSnapshotService=mock(CacheSnapshotService.class,"MockCacheSnapshotService");
  SnapshotFilter mockSnapshotFilterOne=mock(SnapshotFilter.class,"MockSnapshotFilterOne");
  SnapshotFilter mockSnapshotFilterTwo=mock(SnapshotFilter.class,"MockSnapshotFilterTwo");
  SnapshotOptions mockSnapshotOptionsOne=mock(SnapshotOptions.class,"MockSnapshotOptionsOne");
  SnapshotOptions mockSnapshotOptionsTwo=mock(SnapshotOptions.class,"MockSnapshotOptionsTwo");
  when(mockCache.getSnapshotService()).thenReturn(mockCacheSnapshotService);
  when(mockCacheSnapshotService.createOptions()).thenReturn(mockSnapshotOptionsOne).thenReturn(mockSnapshotOptionsTwo);
  when(mockSnapshotOptionsOne.invokeCallbacks(anyBoolean())).thenReturn(mockSnapshotOptionsOne);
  when(mockSnapshotOptionsOne.setFilter(eq(mockSnapshotFilterOne))).thenReturn(mockSnapshotOptionsOne);
  when(mockSnapshotOptionsOne.setParallelMode(anyBoolean())).thenReturn(mockSnapshotOptionsOne);
  when(mockSnapshotOptionsTwo.invokeCallbacks(anyBoolean())).thenReturn(mockSnapshotOptionsTwo);
  when(mockSnapshotOptionsTwo.setFilter(eq(mockSnapshotFilterTwo))).thenReturn(mockSnapshotOptionsTwo);
  when(mockSnapshotOptionsTwo.setParallelMode(anyBoolean())).thenReturn(mockSnapshotOptionsTwo);
  SnapshotMetadata[] expectedImports=toArray(newSnapshotMetadata(FileSystemUtils.TEMPORARY_DIRECTORY,mockSnapshotFilterOne,false,true),newSnapshotMetadata(mockSnapshotFilterTwo,true,false));
  SnapshotServiceFactoryBean factoryBean=new SnapshotServiceFactoryBean();
  factoryBean.setCache(mockCache);
  factoryBean.setExports(null);
  factoryBean.setImports(expectedImports);
  factoryBean.setRegion(null);
  assertThat(factoryBean.getObject(),is(nullValue()));
  assertThat((Class<SnapshotServiceAdapter>)factoryBean.getObjectType(),is(equalTo(SnapshotServiceAdapter.class)));
  factoryBean.afterPropertiesSet();
  assertThat(factoryBean.getObject(),is(instanceOf(CacheSnapshotServiceAdapter.class)));
  assertThat((Class<CacheSnapshotServiceAdapter>)factoryBean.getObjectType(),is(equalTo(CacheSnapshotServiceAdapter.class)));
  verify(mockCache,times(1)).getSnapshotService();
  verify(mockCacheSnapshotService,times(2)).createOptions();
  verify(mockCacheSnapshotService,times(1)).load(eq(FileSystemUtils.safeListFiles(FileSystemUtils.TEMPORARY_DIRECTORY,FileSystemUtils.FileOnlyFilter.INSTANCE)),eq(SnapshotFormat.GEMFIRE),eq(mockSnapshotOptionsOne));
  verify(mockCacheSnapshotService,times(1)).load(eq(FileSystemUtils.safeListFiles(FileSystemUtils.WORKING_DIRECTORY,FileSystemUtils.FileOnlyFilter.INSTANCE)),eq(SnapshotFormat.GEMFIRE),eq(mockSnapshotOptionsTwo));
  verify(mockSnapshotOptionsOne,times(1)).invokeCallbacks(eq(false));
  verify(mockSnapshotOptionsOne,times(1)).setFilter(eq(mockSnapshotFilterOne));
  verify(mockSnapshotOptionsOne,times(1)).setParallelMode(eq(true));
  verify(mockSnapshotOptionsTwo,times(1)).invokeCallbacks(eq(true));
  verify(mockSnapshotOptionsTwo,times(1)).setFilter(eq(mockSnapshotFilterTwo));
  verify(mockSnapshotOptionsTwo,times(1)).setParallelMode(eq(false));
}
