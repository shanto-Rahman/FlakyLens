@Test public void testDeploymentPoliciesOnMultipleHostsAndPlacements() throws Throwable {
  DeploymentPolicy policy=createDeploymentPolicy();
  final GroupResourcePlacementState placement1=createPlacement(null);
  final GroupResourcePlacementState placement2=createPlacement(null);
  final GroupResourcePlacementState placement3=createPlacement(null);
  createContainerHost(null,placement3.resourcePoolLink);
  createContainerHost(null,placement1.resourcePoolLink);
  containerDesc.deploymentPolicyId=extractId(policy.documentSelfLink);
  doPut(containerDesc);
  ReservationTaskState task=new ReservationTaskState();
  task.resourceDescriptionLink=containerDesc.documentSelfLink;
  task.resourceCount=1;
  task.serviceTaskCallback=ServiceTaskCallback.createEmpty();
  task=doPost(task,ReservationTaskFactoryService.SELF_LINK);
  assertNotNull(task);
  waitForTaskSuccess(task.documentSelfLink,ReservationTaskState.class);
  final ComputeState host3=createContainerHost(policy,placement1.resourcePoolLink);
  final ComputeState host4=createContainerHost(policy,placement2.resourcePoolLink);
  task=new ReservationTaskState();
  task.resourceDescriptionLink=containerDesc.documentSelfLink;
  task.resourceCount=1;
  task.serviceTaskCallback=ServiceTaskCallback.createEmpty();
  task=doPost(task,ReservationTaskFactoryService.SELF_LINK);
  assertNotNull(task);
  task=waitForTaskSuccess(task.documentSelfLink,ReservationTaskState.class);
  assertNotNull(task.hostSelections);
  assertEquals(2,task.hostSelections.size());
  List<String> expectedHostsList=new ArrayList<>(Arrays.asList(host3,host4)).stream().map((e) -> e.documentSelfLink).collect(Collectors.toList());
  assertTrue(expectedHostsList.containsAll(task.hostSelections.stream().map(h -> h.hostLink).collect(Collectors.toList())));
  GroupResourcePlacementState placement4=createPlacement(policy);
  GroupResourcePlacementState placement5=createPlacement(policy);
  createContainerHost(null,placement4.resourcePoolLink);
  final ComputeState host6=createContainerHost(policy,placement5.resourcePoolLink);
  task=new ReservationTaskState();
  task.resourceDescriptionLink=containerDesc.documentSelfLink;
  task.resourceCount=1;
  task.serviceTaskCallback=ServiceTaskCallback.createEmpty();
  task=doPost(task,ReservationTaskFactoryService.SELF_LINK);
  assertNotNull(task);
  task=waitForTaskSuccess(task.documentSelfLink,ReservationTaskState.class);
  final String expectedPlacementLink=placement5.documentSelfLink;
  assertEquals(expectedPlacementLink,task.groupResourcePlacementLink);
  assertNotNull(task.hostSelections);
  assertEquals(1,task.hostSelections.size());
  assertEquals(host6.documentSelfLink,task.hostSelections.get(0).hostLink);
}
