@Test public void testCreateMultiTimeSeriesPlanLog() throws UnknownLogTypeException, IOException, IllegalPathException {
  List<PartialPath> paths=new ArrayList<>();
  paths.add(new PartialPath("root.sg1.d2.s1"));
  paths.add(new PartialPath("root.sg1.d2.s2"));
  List<TSDataType> tsDataTypes=new ArrayList<>();
  tsDataTypes.add(TSDataType.INT64);
  tsDataTypes.add(TSDataType.INT32);
  List<TSEncoding> tsEncodings=new ArrayList<>();
  tsEncodings.add(TSEncoding.RLE);
  tsEncodings.add(TSEncoding.RLE);
  List<CompressionType> tsCompressionTypes=new ArrayList<>();
  tsCompressionTypes.add(CompressionType.SNAPPY);
  tsCompressionTypes.add(CompressionType.SNAPPY);
  List<Map<String,String>> tagsList=new ArrayList<>();
  Map<String,String> tags=new HashMap<>();
  tags.put("unit","kg");
  tagsList.add(tags);
  tagsList.add(tags);
  List<Map<String,String>> attributesList=new ArrayList<>();
  Map<String,String> attributes=new HashMap<>();
  attributes.put("minValue","1");
  attributes.put("maxValue","100");
  attributesList.add(attributes);
  attributesList.add(attributes);
  List<String> alias=new ArrayList<>();
  alias.add("weight1");
  alias.add("weight2");
  CreateMultiTimeSeriesPlan plan=new CreateMultiTimeSeriesPlan();
  plan.setPaths(paths);
  plan.setDataTypes(tsDataTypes);
  plan.setEncodings(tsEncodings);
  plan.setCompressors(tsCompressionTypes);
  plan.setTags(tagsList);
  plan.setAttributes(attributesList);
  plan.setAlias(alias);
  Log log=new PhysicalPlanLog(plan);
  log.setCurrLogTerm(1);
  log.setCurrLogIndex(2);
  ByteBuffer serialized=log.serialize();
  ByteArrayOutputStream byteArrayOutputStream=new ByteArrayOutputStream();
  DataOutputStream dataOutputStream=new DataOutputStream(byteArrayOutputStream);
  plan.serialize(dataOutputStream);
  ByteBuffer bufferA=ByteBuffer.wrap(byteArrayOutputStream.toByteArray());
  ByteBuffer bufferB=ByteBuffer.allocate(bufferA.limit());
  plan.serialize(bufferB);
  bufferB.flip();
  assertEquals(bufferA,bufferB);
  Log parsed=LogParser.getINSTANCE().parse(serialized);
  assertEquals(log,parsed);
}
