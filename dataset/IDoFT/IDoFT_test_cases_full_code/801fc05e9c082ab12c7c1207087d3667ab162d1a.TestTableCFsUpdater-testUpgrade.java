@Test public void testUpgrade() throws Exception {
  String peerId="1";
  final TableName tableName1=TableName.valueOf(name.getMethodName() + "1");
  final TableName tableName2=TableName.valueOf(name.getMethodName() + "2");
  final TableName tableName3=TableName.valueOf(name.getMethodName() + "3");
  ReplicationPeerConfig rpc=new ReplicationPeerConfig();
  rpc.setClusterKey(zkw.getQuorum());
  String peerNode=zkStorageUtil.getPeerNode(peerId);
  ZKUtil.createWithParents(zkw,peerNode,ReplicationPeerConfigUtil.toByteArray(rpc));
  String tableCFs=tableName1 + ":cf1,cf2;" + tableName2+ ":cf3;"+ tableName3;
  String tableCFsNode=getTableCFsNode(peerId);
  LOG.info("create tableCFs :" + tableCFsNode + " for peerId="+ peerId);
  ZKUtil.createWithParents(zkw,tableCFsNode,Bytes.toBytes(tableCFs));
  ReplicationPeerConfig actualRpc=ReplicationPeerConfigUtil.parsePeerFrom(ZKUtil.getData(zkw,peerNode));
  String actualTableCfs=Bytes.toString(ZKUtil.getData(zkw,tableCFsNode));
  assertEquals(rpc.getClusterKey(),actualRpc.getClusterKey());
  assertNull(actualRpc.getTableCFsMap());
  assertEquals(tableCFs,actualTableCfs);
  peerId="2";
  rpc=new ReplicationPeerConfig();
  rpc.setClusterKey(zkw.getQuorum());
  peerNode=zkStorageUtil.getPeerNode(peerId);
  ZKUtil.createWithParents(zkw,peerNode,ReplicationPeerConfigUtil.toByteArray(rpc));
  tableCFs=tableName1 + ":cf1,cf3;" + tableName2+ ":cf2";
  tableCFsNode=getTableCFsNode(peerId);
  LOG.info("create tableCFs :" + tableCFsNode + " for peerId="+ peerId);
  ZKUtil.createWithParents(zkw,tableCFsNode,Bytes.toBytes(tableCFs));
  actualRpc=ReplicationPeerConfigUtil.parsePeerFrom(ZKUtil.getData(zkw,peerNode));
  actualTableCfs=Bytes.toString(ZKUtil.getData(zkw,tableCFsNode));
  assertEquals(rpc.getClusterKey(),actualRpc.getClusterKey());
  assertNull(actualRpc.getTableCFsMap());
  assertEquals(tableCFs,actualTableCfs);
  peerId="3";
  rpc=new ReplicationPeerConfig();
  rpc.setClusterKey(zkw.getQuorum());
  peerNode=zkStorageUtil.getPeerNode(peerId);
  ZKUtil.createWithParents(zkw,peerNode,ReplicationPeerConfigUtil.toByteArray(rpc));
  tableCFs="";
  tableCFsNode=getTableCFsNode(peerId);
  LOG.info("create tableCFs :" + tableCFsNode + " for peerId="+ peerId);
  ZKUtil.createWithParents(zkw,tableCFsNode,Bytes.toBytes(tableCFs));
  actualRpc=ReplicationPeerConfigUtil.parsePeerFrom(ZKUtil.getData(zkw,peerNode));
  actualTableCfs=Bytes.toString(ZKUtil.getData(zkw,tableCFsNode));
  assertEquals(rpc.getClusterKey(),actualRpc.getClusterKey());
  assertNull(actualRpc.getTableCFsMap());
  assertEquals(tableCFs,actualTableCfs);
  peerId="4";
  rpc=new ReplicationPeerConfig();
  rpc.setClusterKey(zkw.getQuorum());
  peerNode=zkStorageUtil.getPeerNode(peerId);
  ZKUtil.createWithParents(zkw,peerNode,ReplicationPeerConfigUtil.toByteArray(rpc));
  tableCFsNode=getTableCFsNode(peerId);
  actualRpc=ReplicationPeerConfigUtil.parsePeerFrom(ZKUtil.getData(zkw,peerNode));
  actualTableCfs=Bytes.toString(ZKUtil.getData(zkw,tableCFsNode));
  assertEquals(rpc.getClusterKey(),actualRpc.getClusterKey());
  assertNull(actualRpc.getTableCFsMap());
  assertNull(actualTableCfs);
  copyTableCFs();
  peerId="1";
  peerNode=zkStorageUtil.getPeerNode(peerId);
  actualRpc=ReplicationPeerConfigUtil.parsePeerFrom(ZKUtil.getData(zkw,peerNode));
  assertEquals(rpc.getClusterKey(),actualRpc.getClusterKey());
  Map<TableName,List<String>> tableNameListMap=actualRpc.getTableCFsMap();
  assertEquals(3,tableNameListMap.size());
  assertTrue(tableNameListMap.containsKey(tableName1));
  assertTrue(tableNameListMap.containsKey(tableName2));
  assertTrue(tableNameListMap.containsKey(tableName3));
  assertEquals(2,tableNameListMap.get(tableName1).size());
  assertEquals("cf1",tableNameListMap.get(tableName1).get(0));
  assertEquals("cf2",tableNameListMap.get(tableName1).get(1));
  assertEquals(1,tableNameListMap.get(tableName2).size());
  assertEquals("cf3",tableNameListMap.get(tableName2).get(0));
  assertNull(tableNameListMap.get(tableName3));
  peerId="2";
  peerNode=zkStorageUtil.getPeerNode(peerId);
  actualRpc=ReplicationPeerConfigUtil.parsePeerFrom(ZKUtil.getData(zkw,peerNode));
  assertEquals(rpc.getClusterKey(),actualRpc.getClusterKey());
  tableNameListMap=actualRpc.getTableCFsMap();
  assertEquals(2,tableNameListMap.size());
  assertTrue(tableNameListMap.containsKey(tableName1));
  assertTrue(tableNameListMap.containsKey(tableName2));
  assertEquals(2,tableNameListMap.get(tableName1).size());
  assertEquals("cf1",tableNameListMap.get(tableName1).get(0));
  assertEquals("cf3",tableNameListMap.get(tableName1).get(1));
  assertEquals(1,tableNameListMap.get(tableName2).size());
  assertEquals("cf2",tableNameListMap.get(tableName2).get(0));
  peerId="3";
  peerNode=zkStorageUtil.getPeerNode(peerId);
  actualRpc=ReplicationPeerConfigUtil.parsePeerFrom(ZKUtil.getData(zkw,peerNode));
  assertEquals(rpc.getClusterKey(),actualRpc.getClusterKey());
  tableNameListMap=actualRpc.getTableCFsMap();
  assertNull(tableNameListMap);
  peerId="4";
  peerNode=zkStorageUtil.getPeerNode(peerId);
  actualRpc=ReplicationPeerConfigUtil.parsePeerFrom(ZKUtil.getData(zkw,peerNode));
  assertEquals(rpc.getClusterKey(),actualRpc.getClusterKey());
  tableNameListMap=actualRpc.getTableCFsMap();
  assertNull(tableNameListMap);
}
