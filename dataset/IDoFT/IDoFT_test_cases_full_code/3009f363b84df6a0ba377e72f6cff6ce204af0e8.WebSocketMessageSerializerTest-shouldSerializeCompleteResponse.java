@Test public void shouldSerializeCompleteResponse() throws IOException {
  String jsonHttpResponse=new WebSocketMessageSerializer(new MockServerLogger()).serialize(new HttpResponseDTO().setStatusCode(123).setBody(BodyWithContentTypeDTO.createWithContentTypeDTO(exact("somebody"))).setHeaders(new Headers().withEntries(header("someHeaderName","someHeaderValue"))).setCookies(new Cookies().withEntries(cookie("someCookieName","someCookieValue"))).setDelay(new DelayDTO(minutes(1))).buildObject());
  assertEquals("{" + NEW_LINE + "  \"type\" : \"org.mockserver.model.HttpResponse\","+ NEW_LINE+ "  \"value\" : \"{"+ StringEscapeUtils.escapeJava(NEW_LINE)+ "  \\\"statusCode\\\" : 123,"+ StringEscapeUtils.escapeJava(NEW_LINE)+ "  \\\"headers\\\" : {"+ StringEscapeUtils.escapeJava(NEW_LINE)+ "    \\\"someHeaderName\\\" : [ \\\"someHeaderValue\\\" ]"+ StringEscapeUtils.escapeJava(NEW_LINE)+ "  },"+ StringEscapeUtils.escapeJava(NEW_LINE)+ "  \\\"cookies\\\" : {"+ StringEscapeUtils.escapeJava(NEW_LINE)+ "    \\\"someCookieName\\\" : \\\"someCookieValue\\\""+ StringEscapeUtils.escapeJava(NEW_LINE)+ "  },"+ StringEscapeUtils.escapeJava(NEW_LINE)+ "  \\\"body\\\" : \\\"somebody\\\","+ StringEscapeUtils.escapeJava(NEW_LINE)+ "  \\\"delay\\\" : {"+ StringEscapeUtils.escapeJava(NEW_LINE)+ "    \\\"timeUnit\\\" : \\\"MINUTES\\\","+ StringEscapeUtils.escapeJava(NEW_LINE)+ "    \\\"value\\\" : 1"+ StringEscapeUtils.escapeJava(NEW_LINE)+ "  }"+ StringEscapeUtils.escapeJava(NEW_LINE)+ "}\""+ NEW_LINE+ "}",jsonHttpResponse);
}
