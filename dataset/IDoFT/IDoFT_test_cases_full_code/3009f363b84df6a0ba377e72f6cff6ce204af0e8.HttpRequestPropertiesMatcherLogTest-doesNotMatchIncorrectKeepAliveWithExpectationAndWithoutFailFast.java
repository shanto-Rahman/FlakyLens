@Test public void doesNotMatchIncorrectKeepAliveWithExpectationAndWithoutFailFast(){
  boolean originalMatchersFailFast=matchersFailFast();
  try {
    matchersFailFast(false);
    assertFalse(match(new Expectation(request().withKeepAlive(true)),request().withKeepAlive(false)));
    assertFalse(match(new Expectation(request().withKeepAlive(false)),request().withKeepAlive(null)));
    HttpResponse response=httpStateHandler.retrieve(request().withQueryStringParameter("type","logs"));
    assertThat(response.getBodyAsString(),is(LOG_DATE_FORMAT.format(new Date(TimeService.currentTimeMillis())) + " - request:" + NEW_LINE+ NEW_LINE+ "  {"+ NEW_LINE+ "    \"keepAlive\" : false"+ NEW_LINE+ "  }"+ NEW_LINE+ NEW_LINE+ " didn't match expectation:"+ NEW_LINE+ NEW_LINE+ "  {"+ NEW_LINE+ "    \"id\" : \""+ UUIDService.getUUID()+ "\","+ NEW_LINE+ "    \"priority\" : 0,"+ NEW_LINE+ "    \"httpRequest\" : {"+ NEW_LINE+ "      \"keepAlive\" : true"+ NEW_LINE+ "    },"+ NEW_LINE+ "    \"times\" : {"+ NEW_LINE+ "      \"unlimited\" : true"+ NEW_LINE+ "    },"+ NEW_LINE+ "    \"timeToLive\" : {"+ NEW_LINE+ "      \"unlimited\" : true"+ NEW_LINE+ "    }"+ NEW_LINE+ "  }"+ NEW_LINE+ NEW_LINE+ " because:"+ NEW_LINE+ NEW_LINE+ "  method matched"+ NEW_LINE+ "  path matched"+ NEW_LINE+ "  body matched"+ NEW_LINE+ "  headers matched"+ NEW_LINE+ "  cookies matched"+ NEW_LINE+ "  pathParameters matched"+ NEW_LINE+ "  queryParameters matched"+ NEW_LINE+ "  keep-alive didn't match: "+ NEW_LINE+ "  "+ NEW_LINE+ "    boolean match failed expected:"+ NEW_LINE+ "  "+ NEW_LINE+ "      true"+ NEW_LINE+ "  "+ NEW_LINE+ "     found:"+ NEW_LINE+ "  "+ NEW_LINE+ "      false"+ NEW_LINE+ "  "+ NEW_LINE+ "  sslMatches matched"+ NEW_LINE+ NEW_LINE+ "------------------------------------"+ NEW_LINE+ LOG_DATE_FORMAT.format(new Date(TimeService.currentTimeMillis()))+ " - request:"+ NEW_LINE+ NEW_LINE+ "  { }"+ NEW_LINE+ NEW_LINE+ " didn't match expectation:"+ NEW_LINE+ NEW_LINE+ "  {"+ NEW_LINE+ "    \"id\" : \""+ UUIDService.getUUID()+ "\","+ NEW_LINE+ "    \"priority\" : 0,"+ NEW_LINE+ "    \"httpRequest\" : {"+ NEW_LINE+ "      \"keepAlive\" : false"+ NEW_LINE+ "    },"+ NEW_LINE+ "    \"times\" : {"+ NEW_LINE+ "      \"unlimited\" : true"+ NEW_LINE+ "    },"+ NEW_LINE+ "    \"timeToLive\" : {"+ NEW_LINE+ "      \"unlimited\" : true"+ NEW_LINE+ "    }"+ NEW_LINE+ "  }"+ NEW_LINE+ NEW_LINE+ " because:"+ NEW_LINE+ NEW_LINE+ "  method matched"+ NEW_LINE+ "  path matched"+ NEW_LINE+ "  body matched"+ NEW_LINE+ "  headers matched"+ NEW_LINE+ "  cookies matched"+ NEW_LINE+ "  pathParameters matched"+ NEW_LINE+ "  queryParameters matched"+ NEW_LINE+ "  keep-alive didn't match: "+ NEW_LINE+ "  "+ NEW_LINE+ "    boolean match failed expected:"+ NEW_LINE+ "  "+ NEW_LINE+ "      false"+ NEW_LINE+ "  "+ NEW_LINE+ "     found:"+ NEW_LINE+ "  "+ NEW_LINE+ "      null"+ NEW_LINE+ "  "+ NEW_LINE+ "  sslMatches matched"+ NEW_LINE+ NEW_LINE));
  }
  finally {
    matchersFailFast(originalMatchersFailFast);
  }
}
