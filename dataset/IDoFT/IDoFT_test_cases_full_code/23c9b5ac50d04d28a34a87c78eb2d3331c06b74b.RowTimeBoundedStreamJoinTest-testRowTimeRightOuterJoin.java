@Test public void testRowTimeRightOuterJoin() throws Exception {
  RowTimeBoundedStreamJoin joinProcessFunc=new RowTimeBoundedStreamJoin(FlinkJoinType.RIGHT,-5,9,0,rowType,rowType,generatedFunction,0,0);
  KeyedTwoInputStreamOperatorTestHarness<BaseRow,BaseRow,BaseRow,BaseRow> testHarness=createTestHarness(joinProcessFunc);
  testHarness.open();
  testHarness.processElement1(record(1L,"k1"));
  testHarness.processElement2(record(1L,"k2"));
  assertEquals(2,testHarness.numEventTimeTimers());
  assertEquals(4,testHarness.numKeyedStateEntries());
  testHarness.processWatermark1(new Watermark(14));
  testHarness.processWatermark2(new Watermark(14));
  assertEquals(1,testHarness.numEventTimeTimers());
  assertEquals(2,testHarness.numKeyedStateEntries());
  testHarness.processWatermark1(new Watermark(18));
  testHarness.processWatermark2(new Watermark(18));
  assertEquals(0,testHarness.numEventTimeTimers());
  assertEquals(0,testHarness.numKeyedStateEntries());
  testHarness.processElement1(record(2L,"k1"));
  testHarness.processElement2(record(2L,"k2"));
  assertEquals(0,testHarness.numKeyedStateEntries());
  assertEquals(0,testHarness.numEventTimeTimers());
  testHarness.processElement1(record(19L,"k1"));
  testHarness.processElement1(record(20L,"k1"));
  testHarness.processElement2(record(26L,"k1"));
  testHarness.processElement2(record(25L,"k1"));
  testHarness.processElement1(record(21L,"k1"));
  testHarness.processElement2(record(39L,"k2"));
  testHarness.processElement2(record(40L,"k2"));
  testHarness.processElement1(record(50L,"k2"));
  testHarness.processElement1(record(49L,"k2"));
  testHarness.processElement2(record(41L,"k2"));
  testHarness.processWatermark1(new Watermark(100));
  testHarness.processWatermark2(new Watermark(100));
  List<Object> expectedOutput=new ArrayList<>();
  expectedOutput.add(new Watermark(5));
  expectedOutput.add(record(null,null,1L,"k2"));
  expectedOutput.add(new Watermark(9));
  expectedOutput.add(record(null,null,2L,"k2"));
  expectedOutput.add(record(20L,"k1",25L,"k1"));
  expectedOutput.add(record(21L,"k1",25L,"k1"));
  expectedOutput.add(record(21L,"k1",26L,"k1"));
  expectedOutput.add(record(49L,"k2",40L,"k2"));
  expectedOutput.add(record(49L,"k2",41L,"k2"));
  expectedOutput.add(record(50L,"k2",41L,"k2"));
  expectedOutput.add(record(null,null,39L,"k2"));
  expectedOutput.add(new Watermark(91));
  assertor.assertOutputEquals("output wrong.",expectedOutput,testHarness.getOutput());
  testHarness.close();
}
