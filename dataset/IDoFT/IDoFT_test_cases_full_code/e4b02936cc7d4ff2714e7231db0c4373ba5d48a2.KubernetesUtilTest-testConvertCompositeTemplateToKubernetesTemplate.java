@Test public void testConvertCompositeTemplateToKubernetesTemplate() throws IOException {
  CompositeTemplate template=deserializeCompositeTemplate(getContent("composite.wordpress.kubernetes.yaml"));
  KubernetesTemplate kubernetesTemplate=fromCompositeTemplateToKubernetesTemplate(template);
  assertEquals(2,kubernetesTemplate.deployments.size());
  assertEquals(2,kubernetesTemplate.services.size());
  Service wordpressService=kubernetesTemplate.services.get("wordpress");
  Service mysqlService=kubernetesTemplate.services.get("db");
  Deployment wordpressDeployment=kubernetesTemplate.deployments.get("wordpress");
  Deployment mysqlDeployment=kubernetesTemplate.deployments.get("db");
  String wordpressDeploymentSerialized=serializeKubernetesEntity(wordpressDeployment);
  String mysqlDeploymentSerialized=serializeKubernetesEntity(mysqlDeployment);
  String wordpressServiceSerialized=serializeKubernetesEntity(wordpressService);
  String mysqlServiceSerialized=serializeKubernetesEntity(mysqlService);
  String expectedWordpressDeployment=getContent("kubernetes.wordpress.deployment.yaml");
  String expectedWordpressService=getContent("kubernetes.wordpress.service.yaml");
  String expectedMysqlDeployment=getContent("kubernetes.mysql.deployment.yaml");
  String expectedMySqlService=getContent("kubernetes.mysql.service.yaml");
  assertEquals(switchToUnixLineEnds(expectedMysqlDeployment).trim(),mysqlDeploymentSerialized);
  assertEquals(switchToUnixLineEnds(expectedWordpressService).trim(),wordpressServiceSerialized);
  assertEquals(switchToUnixLineEnds(expectedWordpressDeployment).trim(),wordpressDeploymentSerialized);
  assertEquals(switchToUnixLineEnds(expectedMySqlService).trim(),mysqlServiceSerialized);
  StringBuilder builder=new StringBuilder();
  builder.append(expectedWordpressService);
  builder.append("\n");
  builder.append(expectedMySqlService);
  builder.append("\n");
  builder.append(expectedWordpressDeployment);
  builder.append("\n");
  builder.append(expectedMysqlDeployment);
  builder.append("\n");
  String kubernetesTemplateSerialized=serializeKubernetesTemplate(kubernetesTemplate);
  assertEquals(switchToUnixLineEnds(builder.toString()).trim(),kubernetesTemplateSerialized);
}
