@Test public void testUncompressedInputDefaultDelimiterPosValue() throws Exception {
  Configuration conf=new Configuration();
  String inputData="1234567890\r\n12\r\n345";
  Path inputFile=createInputFile(conf,inputData);
  conf.setInt("io.file.buffer.size",10);
  conf.setInt(org.apache.hadoop.mapreduce.lib.input.LineRecordReader.MAX_LINE_LENGTH,Integer.MAX_VALUE);
  FileSplit split=new FileSplit(inputFile,0,15,(String[])null);
  TaskAttemptContext context=new TaskAttemptContextImpl(conf,new TaskAttemptID());
  LineRecordReader reader=new LineRecordReader(null);
  reader.initialize(split,context);
  LongWritable key;
  Text value;
  reader.nextKeyValue();
  key=reader.getCurrentKey();
  value=reader.getCurrentValue();
  assertEquals(10,value.getLength());
  assertEquals(0,key.get());
  reader.nextKeyValue();
  assertEquals(2,value.getLength());
  assertEquals(12,key.get());
  assertFalse(reader.nextKeyValue());
  assertEquals(16,key.get());
  split=new FileSplit(inputFile,15,4,(String[])null);
  reader=new LineRecordReader(null);
  reader.initialize(split,context);
  reader.nextKeyValue();
  key=reader.getCurrentKey();
  value=reader.getCurrentValue();
  assertEquals(3,value.getLength());
  assertEquals(16,key.get());
  assertFalse(reader.nextKeyValue());
  assertEquals(19,key.get());
  inputData="123456789\r\r\n";
  inputFile=createInputFile(conf,inputData);
  split=new FileSplit(inputFile,0,12,(String[])null);
  reader=new LineRecordReader(null);
  reader.initialize(split,context);
  reader.nextKeyValue();
  key=reader.getCurrentKey();
  value=reader.getCurrentValue();
  assertEquals(9,value.getLength());
  assertEquals(0,key.get());
  reader.nextKeyValue();
  assertEquals(0,value.getLength());
  assertEquals(10,key.get());
  assertFalse(reader.nextKeyValue());
  assertEquals(12,key.get());
}
