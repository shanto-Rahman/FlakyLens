@Test public void shouldRetrieveRecordedRequestsResponsesAsLogEntries(){
assertThat(response,is(response().withBody("[" + NEW_LINE + "  {"+ NEW_LINE+ "    \"logLevel\" : \"INFO\","+ NEW_LINE+ "    \"timestamp\" : \""+ LOG_DATE_FORMAT.format(new Date(TimeService.currentTimeMillis()))+ "\","+ NEW_LINE+ "    \"type\" : \"NO_MATCH_RESPONSE\","+ NEW_LINE+ "    \"httpRequest\" : {"+ NEW_LINE+ "      \"path\" : \"request_one\""+ NEW_LINE+ "    },"+ NEW_LINE+ "    \"expectation\" : {"+ NEW_LINE+ "      \"id\" : \"key_one\","+ NEW_LINE+ "      \"priority\" : 0,"+ NEW_LINE+ "      \"httpRequest\" : {"+ NEW_LINE+ "        \"path\" : \"request_one\""+ NEW_LINE+ "      },"+ NEW_LINE+ "      \"times\" : {"+ NEW_LINE+ "        \"unlimited\" : true"+ NEW_LINE+ "      },"+ NEW_LINE+ "      \"timeToLive\" : {"+ NEW_LINE+ "        \"unlimited\" : true"+ NEW_LINE+ "      },"+ NEW_LINE+ "      \"httpResponse\" : {"+ NEW_LINE+ "        \"statusCode\" : 200,"+ NEW_LINE+ "        \"reasonPhrase\" : \"OK\","+ NEW_LINE+ "        \"body\" : \"response_two\""+ NEW_LINE+ "      }"+ NEW_LINE+ "    },"+ NEW_LINE+ "    \"message\" : ["+ NEW_LINE+ "      \"no expectation for:\","+ NEW_LINE+ "      \"\","+ NEW_LINE+ "      \"   {\","+ NEW_LINE+ "      \"      \\\"path\\\" : \\\"request_one\\\"\","+ NEW_LINE+ "      \"   }\","+ NEW_LINE+ "      \"\","+ NEW_LINE+ "      \" returning response:\","+ NEW_LINE+ "      \"\","+ NEW_LINE+ "      \"   {\","+ NEW_LINE+ "      \"      \\\"statusCode\\\" : 404,\","+ NEW_LINE+ "      \"      \\\"reasonPhrase\\\" : \\\"Not Found\\\"\","+ NEW_LINE+ "      \"   }\""+ NEW_LINE+ "    ]"+ NEW_LINE+ "  },"+ NEW_LINE+ "  {"+ NEW_LINE+ "    \"logLevel\" : \"INFO\","+ NEW_LINE+ "    \"timestamp\" : \""+ LOG_DATE_FORMAT.format(new Date(TimeService.currentTimeMillis()))+ "\","+ NEW_LINE+ "    \"type\" : \"EXPECTATION_RESPONSE\","+ NEW_LINE+ "    \"httpRequest\" : {"+ NEW_LINE+ "      \"path\" : \"request_two\""+ NEW_LINE+ "    },"+ NEW_LINE+ "    \"httpResponse\" : {"+ NEW_LINE+ "      \"statusCode\" : 200,"+ NEW_LINE+ "      \"reasonPhrase\" : \"OK\","+ NEW_LINE+ "      \"body\" : \"response_two\""+ NEW_LINE+ "    },"+ NEW_LINE+ "    \"message\" : ["+ NEW_LINE+ "      \"returning error:\","+ NEW_LINE+ "      \"\","+ NEW_LINE+ "      \"   {\","+ NEW_LINE+ "      \"      \\\"path\\\" : \\\"request_two\\\"\","+ NEW_LINE+ "      \"   }\","+ NEW_LINE+ "      \"\","+ NEW_LINE+ "      \" for request:\","+ NEW_LINE+ "      \"\","+ NEW_LINE+ "      \"   {\","+ NEW_LINE+ "      \"      \\\"statusCode\\\" : 200,\","+ NEW_LINE+ "      \"      \\\"reasonPhrase\\\" : \\\"OK\\\",\","+ NEW_LINE+ "      \"      \\\"body\\\" : \\\"response_two\\\"\","+ NEW_LINE+ "      \"   }\","+ NEW_LINE+ "      \"\","+ NEW_LINE+ "      \" for action:\","+ NEW_LINE+ "      \"\","+ NEW_LINE+ "      \"   {\","+ NEW_LINE+ "      \"      \\\"statusCode\\\" : 200,\","+ NEW_LINE+ "      \"      \\\"reasonPhrase\\\" : \\\"OK\\\",\","+ NEW_LINE+ "      \"      \\\"body\\\" : \\\"response_two\\\"\","+ NEW_LINE+ "      \"   }\""+ NEW_LINE+ "    ]"+ NEW_LINE+ "  }"+ NEW_LINE+ "]",MediaType.JSON_UTF_8).withStatusCode(200)));
}