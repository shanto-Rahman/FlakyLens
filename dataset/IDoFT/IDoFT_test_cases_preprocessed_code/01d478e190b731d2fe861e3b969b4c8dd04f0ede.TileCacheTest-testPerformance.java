@Test public void testPerformance() throws IOException {
assertEquals(256,tc.getNavMesh().getMaxTiles());
assertEquals(16384,tc.getNavMesh().getParams().maxPolys);
assertEquals(14.4f,tc.getNavMesh().getParams().tileWidth,0.001f);
assertEquals(14.4f,tc.getNavMesh().getParams().tileHeight,0.001f);
assertEquals(6,tc.getNavMesh().getMaxVertsPerPoly());
assertEquals(0.3f,tc.getParams().cs,0.0f);
assertEquals(0.2f,tc.getParams().ch,0.0f);
assertEquals(0.9f,tc.getParams().walkableClimb,0.0f);
assertEquals(2f,tc.getParams().walkableHeight,0.0f);
assertEquals(0.6f,tc.getParams().walkableRadius,0.0f);
assertEquals(48,tc.getParams().width);
assertEquals(6 * 7 * 4,tc.getParams().maxTiles);
assertEquals(128,tc.getParams().maxObstacles);
assertEquals(168,tc.getTileCount());
assertEquals(18,header.vertCount);
assertEquals(8,header.polyCount);
assertEquals(8,header.detailMeshCount);
assertEquals(0,header.detailVertCount);
assertEquals(14,header.detailTriCount);
assertEquals(8,data.polys.length);
assertEquals(3 * 18,data.verts.length);
assertEquals(8,data.detailMeshes.length);
assertEquals(0,data.detailVerts.length);
assertEquals(4 * 14,data.detailTris.length);
assertEquals(14.997294f,data.verts[1],0.0001f);
assertEquals(15.484785f,data.verts[6],0.0001f);
assertEquals(15.484785f,data.verts[9],0.0001f);
assertEquals(8,header.vertCount);
assertEquals(3,header.polyCount);
assertEquals(3,header.detailMeshCount);
assertEquals(0,header.detailVertCount);
assertEquals(6,header.detailTriCount);
assertEquals(3,data.polys.length);
assertEquals(3 * 8,data.verts.length);
assertEquals(3,data.detailMeshes.length);
assertEquals(0,data.detailVerts.length);
assertEquals(4 * 6,data.detailTris.length);
assertEquals(20,header.vertCount);
assertEquals(10,header.polyCount);
assertEquals(10,header.detailMeshCount);
assertEquals(0,header.detailVertCount);
assertEquals(18,header.detailTriCount);
assertEquals(10,data.polys.length);
assertEquals(3 * 20,data.verts.length);
assertEquals(10,data.detailMeshes.length);
assertEquals(0,data.detailVerts.length);
assertEquals(4 * 18,data.detailTris.length);
assertEquals(5,header.vertCount);
assertEquals(1,header.polyCount);
assertEquals(1,header.detailMeshCount);
assertEquals(0,header.detailVertCount);
assertEquals(3,header.detailTriCount);
assertEquals(1,data.polys.length);
assertEquals(3 * 5,data.verts.length);
assertEquals(1,data.detailMeshes.length);
assertEquals(0,data.detailVerts.length);
assertEquals(4 * 3,data.detailTris.length);
}