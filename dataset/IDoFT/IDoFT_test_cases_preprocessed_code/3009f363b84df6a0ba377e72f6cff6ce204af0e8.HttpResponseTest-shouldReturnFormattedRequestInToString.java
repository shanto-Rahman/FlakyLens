@Test public void shouldReturnFormattedRequestInToString(){
assertEquals("{" + NEW_LINE + "  \"statusCode\" : 666,"+ NEW_LINE+ "  \"reasonPhrase\" : \"randomPhrase\","+ NEW_LINE+ "  \"headers\" : {"+ NEW_LINE+ "    \"some_header\" : [ \"some_header_value\" ]"+ NEW_LINE+ "  },"+ NEW_LINE+ "  \"cookies\" : {"+ NEW_LINE+ "    \"some_cookie\" : \"some_cookie_value\""+ NEW_LINE+ "  },"+ NEW_LINE+ "  \"body\" : {"+ NEW_LINE+ "    \"type\" : \"STRING\","+ NEW_LINE+ "    \"string\" : \"some_body\","+ NEW_LINE+ "    \"contentType\" : \"text/plain; charset=iso-8859-1\""+ NEW_LINE+ "  },"+ NEW_LINE+ "  \"delay\" : {"+ NEW_LINE+ "    \"timeUnit\" : \"SECONDS\","+ NEW_LINE+ "    \"value\" : 15"+ NEW_LINE+ "  },"+ NEW_LINE+ "  \"connectionOptions\" : {"+ NEW_LINE+ "    \"contentLengthHeaderOverride\" : 10,"+ NEW_LINE+ "    \"keepAliveOverride\" : true"+ NEW_LINE+ "  }"+ NEW_LINE+ "}",response().withBody("some_body",StandardCharsets.ISO_8859_1).withStatusCode(666).withReasonPhrase("randomPhrase").withHeaders(new Header("some_header","some_header_value")).withCookies(new Cookie("some_cookie","some_cookie_value")).withConnectionOptions(connectionOptions().withContentLengthHeaderOverride(10).withKeepAliveOverride(true)).withDelay(SECONDS,15).toString());
}