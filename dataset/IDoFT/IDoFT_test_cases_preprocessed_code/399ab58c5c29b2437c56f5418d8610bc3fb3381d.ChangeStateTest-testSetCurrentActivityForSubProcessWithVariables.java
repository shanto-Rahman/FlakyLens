@Test @Deployment(resources={"org/flowable/engine/test/api/oneTaskSubProcess.bpmn20.xml"}) public void testSetCurrentActivityForSubProcessWithVariables(){
assertEquals("subTask",task.getTaskDefinitionKey());
assertEquals("taskBefore",task.getTaskDefinitionKey());
assertEquals(2,executions.size());
assertEquals("test",processVariables.get("processVar1"));
assertEquals(10,processVariables.get("processVar2"));
assertNull(processVariables.get("localVar1"));
assertNull(processVariables.get("localVar2"));
assertEquals("test2",localVariables.get("localVar1"));
assertEquals(20,localVariables.get("localVar2"));
assertTrue(iterator.hasNext());
assertEquals(FlowableEngineEventType.VARIABLE_CREATED,event.getType());
assertEquals("processVar2",((FlowableVariableEvent)event).getVariableName());
assertEquals(10,((FlowableVariableEvent)event).getVariableValue());
assertTrue(iterator.hasNext());
assertEquals(FlowableEngineEventType.VARIABLE_CREATED,event.getType());
assertEquals("processVar1",((FlowableVariableEvent)event).getVariableName());
assertEquals("test",((FlowableVariableEvent)event).getVariableValue());
assertTrue(iterator.hasNext());
assertEquals(FlowableEngineEventType.ACTIVITY_CANCELLED,event.getType());
assertEquals("subTask",((FlowableActivityEvent)event).getActivityId());
assertTrue(iterator.hasNext());
assertEquals(FlowableEngineEventType.ACTIVITY_CANCELLED,event.getType());
assertEquals("subProcess",((FlowableActivityEvent)event).getActivityId());
assertTrue(iterator.hasNext());
assertEquals(FlowableEngineEventType.VARIABLE_CREATED,event.getType());
assertEquals("localVar2",((FlowableVariableEvent)event).getVariableName());
assertEquals(20,((FlowableVariableEvent)event).getVariableValue());
assertTrue(iterator.hasNext());
assertEquals(FlowableEngineEventType.VARIABLE_CREATED,event.getType());
assertEquals("localVar1",((FlowableVariableEvent)event).getVariableName());
assertEquals("test2",((FlowableVariableEvent)event).getVariableValue());
assertTrue(iterator.hasNext());
assertEquals(FlowableEngineEventType.ACTIVITY_STARTED,event.getType());
assertEquals("taskBefore",((FlowableActivityEvent)event).getActivityId());
assertTrue(!iterator.hasNext());
assertEquals("subTask",task.getTaskDefinitionKey());
assertEquals("taskAfter",task.getTaskDefinitionKey());
}