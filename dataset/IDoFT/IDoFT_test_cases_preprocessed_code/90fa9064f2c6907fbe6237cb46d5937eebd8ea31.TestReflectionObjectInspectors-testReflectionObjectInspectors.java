@Test public void testReflectionObjectInspectors() throws Throwable {
assertEquals(oi1,oi2);
assertEquals(Category.STRUCT,oi1.getCategory());
assertEquals(6,fields.size());
assertEquals(fields.get(2),soi.getStructFieldRef("myString"));
assertNull(soi.getStructFieldData(null,fields.get(i)));
assertNull(soi.getStructFieldsDataAsList(null));
assertEquals(1,soi.getStructFieldData(a,fields.get(0)));
assertEquals(2,soi.getStructFieldData(a,fields.get(1)));
assertEquals("test",soi.getStructFieldData(a,fields.get(2)));
assertEquals(a,soi.getStructFieldData(a,fields.get(3)));
assertEquals(a.myListString,soi.getStructFieldData(a,fields.get(4)));
assertEquals(a.myMapStringString,soi.getStructFieldData(a,fields.get(5)));
assertEquals(afields,soi.getStructFieldsDataAsList(a));
assertEquals(PrimitiveObjectInspectorFactory.javaIntObjectInspector,fields.get(0).getFieldObjectInspector());
assertEquals(PrimitiveObjectInspectorFactory.javaIntObjectInspector,fields.get(1).getFieldObjectInspector());
assertEquals(PrimitiveObjectInspectorFactory.javaStringObjectInspector,fields.get(2).getFieldObjectInspector());
assertEquals(soi,fields.get(3).getFieldObjectInspector());
assertEquals(ObjectInspectorFactory.getStandardListObjectInspector(PrimitiveObjectInspectorFactory.javaStringObjectInspector),fields.get(4).getFieldObjectInspector());
assertEquals(ObjectInspectorFactory.getStandardMapObjectInspector(PrimitiveObjectInspectorFactory.javaStringObjectInspector,PrimitiveObjectInspectorFactory.javaStringObjectInspector),fields.get(5).getFieldObjectInspector());
}