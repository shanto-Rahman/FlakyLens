@Test public void shouldSerializeCompleteRequest() throws IOException {
assertEquals("{" + NEW_LINE + "  \"type\" : \"org.mockserver.model.HttpRequest\","+ NEW_LINE+ "  \"value\" : \"{"+ StringEscapeUtils.escapeJava(NEW_LINE)+ "  \\\"method\\\" : \\\"someMethod\\\","+ StringEscapeUtils.escapeJava(NEW_LINE)+ "  \\\"path\\\" : \\\"somePath\\\","+ StringEscapeUtils.escapeJava(NEW_LINE)+ "  \\\"queryStringParameters\\\" : {"+ StringEscapeUtils.escapeJava(NEW_LINE)+ "    \\\"queryParameterName\\\" : [ \\\"queryParameterValue\\\" ]"+ StringEscapeUtils.escapeJava(NEW_LINE)+ "  },"+ StringEscapeUtils.escapeJava(NEW_LINE)+ "  \\\"headers\\\" : {"+ StringEscapeUtils.escapeJava(NEW_LINE)+ "    \\\"someHeaderName\\\" : [ \\\"someHeaderValue\\\" ]"+ StringEscapeUtils.escapeJava(NEW_LINE)+ "  },"+ StringEscapeUtils.escapeJava(NEW_LINE)+ "  \\\"cookies\\\" : {"+ StringEscapeUtils.escapeJava(NEW_LINE)+ "    \\\"someCookieName\\\" : \\\"someCookieValue\\\""+ StringEscapeUtils.escapeJava(NEW_LINE)+ "  },"+ StringEscapeUtils.escapeJava(NEW_LINE)+ "  \\\"keepAlive\\\" : false,"+ StringEscapeUtils.escapeJava(NEW_LINE)+ "  \\\"secure\\\" : true,"+ StringEscapeUtils.escapeJava(NEW_LINE)+ "  \\\"socketAddress\\\" : {"+ StringEscapeUtils.escapeJava(NEW_LINE)+ "    \\\"host\\\" : \\\"someHost\\\","+ StringEscapeUtils.escapeJava(NEW_LINE)+ "    \\\"port\\\" : 1234,"+ StringEscapeUtils.escapeJava(NEW_LINE)+ "    \\\"scheme\\\" : \\\"HTTPS\\\""+ StringEscapeUtils.escapeJava(NEW_LINE)+ "  },"+ StringEscapeUtils.escapeJava(NEW_LINE)+ "  \\\"body\\\" : \\\"somebody\\\""+ StringEscapeUtils.escapeJava(NEW_LINE)+ "}\""+ NEW_LINE+ "}",jsonHttpRequest);
}