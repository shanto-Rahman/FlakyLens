@Test public void testRemoteAddNode(){
assertEquals(Response.RESPONSE_PARTITION_TABLE_UNAVAILABLE,response.getRespNum());
assertNull(result.get());
assertEquals(Response.RESPONSE_AGREE,response.getRespNum());
assertEquals(partitionTable.serialize(),response.partitionTableBytes);
assertEquals(Response.RESPONSE_AGREE,response.getRespNum());
assertEquals(partitionTable.serialize(),response.partitionTableBytes);
assertEquals(Response.RESPONSE_AGREE,response.getRespNum());
assertEquals(partitionTable.serialize(),response.partitionTableBytes);
assertEquals(Response.RESPONSE_IDENTIFIER_CONFLICT,response.getRespNum());
assertEquals(Response.RESPONSE_NEW_NODE_PARAMETER_CONFLICT,response.getRespNum());
assertFalse(response.getCheckStatusResponse().isPartitionalIntervalEquals());
assertTrue(response.getCheckStatusResponse().isHashSaltEquals());
assertTrue(response.getCheckStatusResponse().isReplicationNumEquals());
assertEquals(Response.RESPONSE_NEW_NODE_PARAMETER_CONFLICT,response.getRespNum());
assertTrue(response.getCheckStatusResponse().isPartitionalIntervalEquals());
assertFalse(response.getCheckStatusResponse().isHashSaltEquals());
assertTrue(response.getCheckStatusResponse().isReplicationNumEquals());
assertEquals(Response.RESPONSE_NEW_NODE_PARAMETER_CONFLICT,response.getRespNum());
assertTrue(response.getCheckStatusResponse().isPartitionalIntervalEquals());
assertTrue(response.getCheckStatusResponse().isHashSaltEquals());
assertFalse(response.getCheckStatusResponse().isReplicationNumEquals());
assertTrue(response.getCheckStatusResponse().isClusterNameEquals());
new Thread(() -> {
  await().atLeast(200,TimeUnit.MILLISECONDS);
  dummyResponse.set(Response.RESPONSE_AGREE);
}
).start();
assertEquals(Response.RESPONSE_AGREE,response.getRespNum());
assertNull(response);
}