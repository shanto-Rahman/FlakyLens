@Test public void shouldRetrieveLogEntries(){
assertThat(response,is(response().withBody("" + LOG_DATE_FORMAT.format(new Date(TimeService.currentTimeMillis())) + " - no expectation for:"+ NEW_LINE+ NEW_LINE+ "  {"+ NEW_LINE+ "    \"path\" : \"request_one\""+ NEW_LINE+ "  }"+ NEW_LINE+ NEW_LINE+ " returning response:"+ NEW_LINE+ NEW_LINE+ "  {"+ NEW_LINE+ "    \"statusCode\" : 404,"+ NEW_LINE+ "    \"reasonPhrase\" : \"Not Found\""+ NEW_LINE+ "  }"+ NEW_LINE+ NEW_LINE+ "------------------------------------"+ NEW_LINE+ LOG_DATE_FORMAT.format(new Date(TimeService.currentTimeMillis()))+ " - returning error:"+ NEW_LINE+ NEW_LINE+ "  {"+ NEW_LINE+ "    \"path\" : \"request_two\""+ NEW_LINE+ "  }"+ NEW_LINE+ NEW_LINE+ " for request:"+ NEW_LINE+ NEW_LINE+ "  {"+ NEW_LINE+ "    \"statusCode\" : 200,"+ NEW_LINE+ "    \"reasonPhrase\" : \"OK\","+ NEW_LINE+ "    \"body\" : \"response_two\""+ NEW_LINE+ "  }"+ NEW_LINE+ NEW_LINE+ " for action:"+ NEW_LINE+ NEW_LINE+ "  {"+ NEW_LINE+ "    \"statusCode\" : 200,"+ NEW_LINE+ "    \"reasonPhrase\" : \"OK\","+ NEW_LINE+ "    \"body\" : \"response_two\""+ NEW_LINE+ "  }"+ NEW_LINE+ NEW_LINE+ "------------------------------------"+ NEW_LINE+ LOG_DATE_FORMAT.format(new Date(TimeService.currentTimeMillis()))+ " - request:"+ NEW_LINE+ NEW_LINE+ "  {"+ NEW_LINE+ "    \"path\" : \"request_one\""+ NEW_LINE+ "  }"+ NEW_LINE+ NEW_LINE+ " matched expectation:"+ NEW_LINE+ NEW_LINE+ "  {"+ NEW_LINE+ "    \"id\" : \"key_one\","+ NEW_LINE+ "    \"priority\" : 0,"+ NEW_LINE+ "    \"httpRequest\" : {"+ NEW_LINE+ "      \"path\" : \"request_one\""+ NEW_LINE+ "    },"+ NEW_LINE+ "    \"times\" : {"+ NEW_LINE+ "      \"unlimited\" : true"+ NEW_LINE+ "    },"+ NEW_LINE+ "    \"timeToLive\" : {"+ NEW_LINE+ "      \"unlimited\" : true"+ NEW_LINE+ "    },"+ NEW_LINE+ "    \"httpResponse\" : {"+ NEW_LINE+ "      \"statusCode\" : 200,"+ NEW_LINE+ "      \"reasonPhrase\" : \"OK\","+ NEW_LINE+ "      \"body\" : \"response_two\""+ NEW_LINE+ "    }"+ NEW_LINE+ "  }"+ NEW_LINE+ NEW_LINE+ "------------------------------------"+ NEW_LINE+ LOG_DATE_FORMAT.format(new Date(TimeService.currentTimeMillis()))+ " - request:"+ NEW_LINE+ NEW_LINE+ "  {"+ NEW_LINE+ "    \"path\" : \"request_two\""+ NEW_LINE+ "  }"+ NEW_LINE+ NEW_LINE+ " matched expectation:"+ NEW_LINE+ NEW_LINE+ "  {"+ NEW_LINE+ "    \"id\" : \"key_two\","+ NEW_LINE+ "    \"priority\" : 0,"+ NEW_LINE+ "    \"httpRequest\" : {"+ NEW_LINE+ "      \"path\" : \"request_two\""+ NEW_LINE+ "    },"+ NEW_LINE+ "    \"times\" : {"+ NEW_LINE+ "      \"unlimited\" : true"+ NEW_LINE+ "    },"+ NEW_LINE+ "    \"timeToLive\" : {"+ NEW_LINE+ "      \"unlimited\" : true"+ NEW_LINE+ "    },"+ NEW_LINE+ "    \"httpResponse\" : {"+ NEW_LINE+ "      \"statusCode\" : 200,"+ NEW_LINE+ "      \"reasonPhrase\" : \"OK\","+ NEW_LINE+ "      \"body\" : \"response_two\""+ NEW_LINE+ "    }"+ NEW_LINE+ "  }"+ NEW_LINE+ NEW_LINE+ "------------------------------------"+ NEW_LINE+ LOG_DATE_FORMAT.format(new Date(TimeService.currentTimeMillis()))+ " - some random"+ NEW_LINE+ NEW_LINE+ "  argument_one"+ NEW_LINE+ NEW_LINE+ " message"+ NEW_LINE,MediaType.PLAIN_TEXT_UTF_8).withStatusCode(200)));
}